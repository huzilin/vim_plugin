[{'word': 'alter', 'kind': 'v', 'abbr': 'alter = arg', 'dup': 1}, {'word': 'alter_worker', 'kind': 'f', 'abbr': 'def alter_worker(cmd_and_instance_info_queue, return_queue):', 'dup': 1}, {'word': 'block_table', 'kind': 'f', 'abbr': 'def block_table(host, port, user, passwd, db, table, charset, block_or_unblock):', 'dup': 1}, {'word': 'charset', 'kind': 'v', 'abbr': 'charset = arg', 'dup': 1}, {'word': 'clean', 'kind': 'v', 'abbr': 'clean', 'dup': 1}, {'word': 'clean_operating', 'kind': 'f', 'abbr': 'def clean_operating(dbscale_host, dbscale_port, user, passwd, database, table, charset, instance_num, instance_info, error_flag):', 'dup': 1}, {'word': 'cleaner_worker', 'kind': 'f', 'abbr': 'def cleaner_worker(instance_info_queue, clean_return_queue):', 'dup': 1}, {'word': 'cmd_and_instance_info_queue', 'kind': 'v', 'abbr': 'cmd_and_instance_info_queue = multiprocessing.Queue(instance_num)', 'dup': 1}, {'word': 'database', 'kind': 'v', 'abbr': 'database = arg', 'dup': 1}, {'word': 'dbscale_host', 'kind': 'v', 'abbr': 'dbscale_host = arg', 'dup': 1}, {'word': 'dbscale_port', 'kind': 'v', 'abbr': 'dbscale_port = int(arg)', 'dup': 1}, {'word': 'drop_tables', 'kind': 'f', 'abbr': 'def drop_tables(host, port, user, passwd, db, charset, table_list):', 'dup': 1}, {'word': 'drop_triggers', 'kind': 'f', 'abbr': 'def drop_triggers(host, port, user, passwd, db, charset, trigger_list):', 'dup': 1}, {'word': 'error_flag', 'kind': 'v', 'abbr': 'error_flag', 'dup': 1}, {'word': 'execute', 'kind': 'v', 'abbr': 'execute', 'dup': 1}, {'word': 'get_table_info', 'kind': 'f', 'abbr': 'def get_table_info(host, port, user, passwd, db, table, charset):', 'dup': 1}, {'word': 'instance_info', 'kind': 'v', 'abbr': 'instance_info = get_table_info(dbscale_host, dbscale_port, user, passwd, database, table, charset)', 'dup': 1}, {'word': 'instance_num', 'kind': 'v', 'abbr': 'instance_num = len(instance_info)', 'dup': 1}, {'word': 'match_table', 'kind': 'f', 'abbr': 'def match_table(host, port, user, passwd, db, table, charset, match_word):', 'dup': 1}, {'word': 'match_triggers', 'kind': 'f', 'abbr': 'def match_triggers(host, port, user, passwd, db, charset, match_word_list):', 'dup': 1}, {'word': 'passwd', 'kind': 'v', 'abbr': 'passwd = arg', 'dup': 1}, {'word': 'process', 'kind': 'v', 'abbr': 'process = list()', 'dup': 1}, {'word': 'return_queue', 'kind': 'v', 'abbr': 'return_queue = multiprocessing.Queue(instance_num)', 'dup': 1}, {'word': 'rollback', 'kind': 'v', 'abbr': 'rollback', 'dup': 1}, {'word': 'rollback_operating', 'kind': 'f', 'abbr': 'def rollback_operating(host, port, user, passwd, db, charset, table, old_table_name):', 'dup': 1}, {'word': 'table', 'kind': 'v', 'abbr': 'table = arg', 'dup': 1}, {'word': 'usage', 'kind': 'f', 'abbr': 'def usage():', 'dup': 1}, {'word': 'user', 'kind': 'v', 'abbr': 'user = arg', 'dup': 1}]
