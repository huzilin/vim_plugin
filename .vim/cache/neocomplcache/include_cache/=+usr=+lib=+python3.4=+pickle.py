[{'word': 'ADDITEMS', 'kind': 'v', 'abbr': 'ADDITEMS', 'dup': 1}, {'word': 'APPEND', 'kind': 'v', 'abbr': 'APPEND = b''a'' # append stack top to list below it', 'dup': 1}, {'word': 'APPENDS', 'kind': 'v', 'abbr': 'APPENDS = b''e'' # extend list on stack by topmost stack slice', 'dup': 1}, {'word': 'BINBYTES', 'kind': 'v', 'abbr': 'BINBYTES = b''B'' # push bytes; counted binary string argument', 'dup': 1}, {'word': 'BINBYTES8', 'kind': 'v', 'abbr': 'BINBYTES8', 'dup': 1}, {'word': 'BINFLOAT', 'kind': 'v', 'abbr': 'BINFLOAT', 'dup': 1}, {'word': 'BINGET', 'kind': 'v', 'abbr': 'BINGET', 'dup': 1}, {'word': 'BININT', 'kind': 'v', 'abbr': 'BININT = b''J'' # push four-byte signed int', 'dup': 1}, {'word': 'BININT1', 'kind': 'v', 'abbr': 'BININT1', 'dup': 1}, {'word': 'BININT2', 'kind': 'v', 'abbr': 'BININT2', 'dup': 1}, {'word': 'BINPERSID', 'kind': 'v', 'abbr': 'BINPERSID = b''Q'' # " " " ; " " " " stack', 'dup': 1}, {'word': 'BINPUT', 'kind': 'v', 'abbr': 'BINPUT', 'dup': 1}, {'word': 'BINSTRING', 'kind': 'v', 'abbr': 'BINSTRING = b''T'' # push string; counted binary string argument', 'dup': 1}, {'word': 'BINUNICODE', 'kind': 'v', 'abbr': 'BINUNICODE', 'dup': 1}, {'word': 'BINUNICODE8', 'kind': 'v', 'abbr': 'BINUNICODE8', 'dup': 1}, {'word': 'BUILD', 'kind': 'v', 'abbr': 'BUILD = b''b'' # call __setstate__ or __dict__.update()', 'dup': 1}, {'word': 'DEFAULT_PROTOCOL', 'kind': 'v', 'abbr': 'DEFAULT_PROTOCOL', 'dup': 1}, {'word': 'DICT', 'kind': 'v', 'abbr': 'DICT = b''d'' # build a dict from stack items', 'dup': 1}, {'word': 'EMPTY_DICT', 'kind': 'v', 'abbr': 'EMPTY_DICT = b''}'' # push empty dict', 'dup': 1}, {'word': 'EMPTY_LIST', 'kind': 'v', 'abbr': 'EMPTY_LIST = b'']'' # push empty list', 'dup': 1}, {'word': 'EMPTY_SET', 'kind': 'v', 'abbr': 'EMPTY_SET', 'dup': 1}, {'word': 'EMPTY_TUPLE', 'kind': 'v', 'abbr': 'EMPTY_TUPLE = b'')'' # push empty tuple', 'dup': 1}, {'word': 'EXT1', 'kind': 'v', 'abbr': 'EXT1', 'dup': 1}, {'word': 'EXT2', 'kind': 'v', 'abbr': 'EXT2', 'dup': 1}, {'word': 'EXT4', 'kind': 'v', 'abbr': 'EXT4', 'dup': 1}, {'word': 'FALSE', 'kind': 'v', 'abbr': 'FALSE', 'dup': 1}, {'word': 'FLOAT', 'kind': 'v', 'abbr': 'FLOAT = b''F'' # push float object; decimal string argument', 'dup': 1}, {'word': 'FRAME', 'kind': 'v', 'abbr': 'FRAME', 'dup': 1}, {'word': 'FROZENSET', 'kind': 'v', 'abbr': 'FROZENSET', 'dup': 1}, {'word': 'GLOBAL', 'kind': 'v', 'abbr': 'GLOBAL', 'dup': 1}, {'word': 'HIGHEST_PROTOCOL', 'kind': 'v', 'abbr': 'HIGHEST_PROTOCOL', 'dup': 1}, {'word': 'INST', 'kind': 'v', 'abbr': 'INST = b''i'' # build & push class instance', 'dup': 1}, {'word': 'LIST', 'kind': 'v', 'abbr': 'LIST = b''l'' # build list from topmost stack items', 'dup': 1}, {'word': 'LONG', 'kind': 'v', 'abbr': 'LONG = b''L'' # push long; decimal string argument', 'dup': 1}, {'word': 'LONG1', 'kind': 'v', 'abbr': 'LONG1', 'dup': 1}, {'word': 'LONG4', 'kind': 'v', 'abbr': 'LONG4', 'dup': 1}, {'word': 'LONG_BINGET', 'kind': 'v', 'abbr': 'LONG_BINGET', 'dup': 1}, {'word': 'LONG_BINPUT', 'kind': 'v', 'abbr': 'LONG_BINPUT', 'dup': 1}, {'word': 'MARK', 'kind': 'v', 'abbr': 'MARK = b''('' # push special markobject on stack', 'dup': 1}, {'word': 'MEMOIZE', 'kind': 'v', 'abbr': 'MEMOIZE', 'dup': 1}, {'word': 'NEWFALSE', 'kind': 'v', 'abbr': 'NEWFALSE', 'dup': 1}, {'word': 'NEWOBJ', 'kind': 'v', 'abbr': 'NEWOBJ', 'dup': 1}, {'word': 'NEWOBJ_EX', 'kind': 'v', 'abbr': 'NEWOBJ_EX', 'dup': 1}, {'word': 'NEWTRUE', 'kind': 'v', 'abbr': 'NEWTRUE', 'dup': 1}, {'word': 'NONE', 'kind': 'v', 'abbr': 'NONE = b''N'' # push None', 'dup': 1}, {'word': 'PERSID', 'kind': 'v', 'abbr': 'PERSID = b''P'' # push persistent object; id is taken from string arg', 'dup': 1}, {'word': 'POP_MARK', 'kind': 'v', 'abbr': 'POP_MARK', 'dup': 1}, {'word': 'PROTO', 'kind': 'v', 'abbr': 'PROTO', 'dup': 1}, {'word': 'PickleError', 'kind': 'c', 'abbr': 'PickleError(Exception): <class>', 'dup': 1}, {'word': 'PicklingError', 'kind': 'c', 'abbr': 'PicklingError(PickleError): <class>', 'dup': 1}, {'word': 'PyStringMap', 'kind': 'v', 'abbr': 'PyStringMap = None', 'dup': 1}, {'word': 'REDUCE', 'kind': 'v', 'abbr': 'REDUCE = b''R'' # apply callable to argtuple, both on stack', 'dup': 1}, {'word': 'SETITEM', 'kind': 'v', 'abbr': 'SETITEM = b''s'' # add key+value pair to dict', 'dup': 1}, {'word': 'SETITEMS', 'kind': 'v', 'abbr': 'SETITEMS = b''u'' # modify dict by adding topmost key+value pairs', 'dup': 1}, {'word': 'SHORT_BINBYTES', 'kind': 'v', 'abbr': 'SHORT_BINBYTES', 'dup': 1}, {'word': 'SHORT_BINSTRING', 'kind': 'v', 'abbr': 'SHORT_BINSTRING', 'dup': 1}, {'word': 'SHORT_BINUNICODE', 'kind': 'v', 'abbr': 'SHORT_BINUNICODE', 'dup': 1}, {'word': 'STACK_GLOBAL', 'kind': 'v', 'abbr': 'STACK_GLOBAL', 'dup': 1}, {'word': 'STOP', 'kind': 'v', 'abbr': 'STOP = b''.'' # every pickle ends with STOP', 'dup': 1}, {'word': 'STRING', 'kind': 'v', 'abbr': 'STRING = b''S'' # push string; NL-terminated string argument', 'dup': 1}, {'word': 'TRUE', 'kind': 'v', 'abbr': 'TRUE', 'dup': 1}, {'word': 'TUPLE', 'kind': 'v', 'abbr': 'TUPLE = b''t'' # build tuple from topmost stack items', 'dup': 1}, {'word': 'TUPLE1', 'kind': 'v', 'abbr': 'TUPLE1', 'dup': 1}, {'word': 'TUPLE2', 'kind': 'v', 'abbr': 'TUPLE2', 'dup': 1}, {'word': 'TUPLE3', 'kind': 'v', 'abbr': 'TUPLE3', 'dup': 1}, {'word': 'UNICODE', 'kind': 'v', 'abbr': 'UNICODE = b''V'' # push Unicode string; raw-unicode-escaped''d argument', 'dup': 1}, {'word': 'UnpicklingError', 'kind': 'c', 'abbr': 'UnpicklingError(PickleError): <class>', 'dup': 1}, {'word': '_BATCHSIZE', 'menu': '_Pickler', 'kind': 'v', 'abbr': '_BATCHSIZE', 'dup': 1}, {'word': '_FRAME_SIZE_TARGET', 'menu': '_Framer', 'kind': 'v', 'abbr': '_FRAME_SIZE_TARGET', 'dup': 1}, {'word': '_Framer', 'kind': 'c', 'abbr': '_Framer: <class>', 'dup': 1}, {'word': '_Pickler', 'kind': 'c', 'abbr': '_Pickler: <class>', 'dup': 1}, {'word': '_Stop', 'kind': 'c', 'abbr': '_Stop(Exception): <class>', 'dup': 1}, {'word': '_Unframer', 'kind': 'c', 'abbr': '_Unframer: <class>', 'dup': 1}, {'word': '_Unpickler', 'kind': 'c', 'abbr': '_Unpickler: <class>', 'dup': 1}, {'word': '__all__', 'kind': 'v', 'abbr': '__all__ = ["PickleError", "PicklingError", "UnpicklingError", "Pickler",', 'dup': 1}, {'word': '__init__', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def __init__(self, file, *, fix_imports=True,', 'dup': 1}, {'word': '_batch_appends', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def _batch_appends(self, items):', 'dup': 1}, {'word': '_batch_setitems', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def _batch_setitems(self, items):', 'dup': 1}, {'word': '_decode_string', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def _decode_string(self, value):', 'dup': 1}, {'word': '_dump', 'kind': 'f', 'abbr': 'def _dump(obj, file, protocol=None, *, fix_imports=True):', 'dup': 1}, {'word': '_dumps', 'kind': 'f', 'abbr': 'def _dumps(obj, protocol=None, *, fix_imports=True):', 'dup': 1}, {'word': '_getattribute', 'kind': 'f', 'abbr': 'def _getattribute(obj, name, allow_qualname=False):', 'dup': 1}, {'word': '_instantiate', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def _instantiate(self, klass, k):', 'dup': 1}, {'word': '_load', 'kind': 'f', 'abbr': 'def _load(file, *, fix_imports=True, encoding="ASCII", errors="strict"):', 'dup': 1}, {'word': '_loads', 'kind': 'f', 'abbr': 'def _loads(s, *, fix_imports=True, encoding="ASCII", errors="strict"):', 'dup': 1}, {'word': '_test', 'kind': 'f', 'abbr': 'def _test():', 'dup': 1}, {'word': '_tuplesize2code', 'kind': 'v', 'abbr': '_tuplesize2code', 'dup': 1}, {'word': 'bytes_types', 'kind': 'v', 'abbr': 'bytes_types = (bytes, bytearray)', 'dup': 1}, {'word': 'clear_memo', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def clear_memo(self):', 'dup': 1}, {'word': 'commit_frame', 'menu': '_Framer', 'kind': 'm', 'abbr': 'def commit_frame(self, force=False):', 'dup': 1}, {'word': 'compatible_formats', 'kind': 'v', 'abbr': 'compatible_formats', 'dup': 1}, {'word': 'decode_long', 'kind': 'f', 'abbr': 'def decode_long(data):', 'dup': 1}, {'word': 'dispatch', 'menu': '_Pickler', 'kind': 'v', 'abbr': 'dispatch = {}', 'dup': 1}, {'word': 'dump', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def dump(self, obj):', 'dup': 1}, {'word': 'encode_long', 'kind': 'f', 'abbr': 'def encode_long(x):', 'dup': 1}, {'word': 'end_framing', 'menu': '_Framer', 'kind': 'm', 'abbr': 'def end_framing(self):', 'dup': 1}, {'word': 'find_class', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def find_class(self, module, name):', 'dup': 1}, {'word': 'format_version', 'kind': 'v', 'abbr': 'format_version', 'dup': 1}, {'word': 'get_extension', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def get_extension(self, code):', 'dup': 1}, {'word': 'load', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load(self):', 'dup': 1}, {'word': 'load_additems', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_additems(self):', 'dup': 1}, {'word': 'load_append', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_append(self):', 'dup': 1}, {'word': 'load_appends', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_appends(self):', 'dup': 1}, {'word': 'load_binbytes', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_binbytes(self):', 'dup': 1}, {'word': 'load_binfloat', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_binfloat(self):', 'dup': 1}, {'word': 'load_binget', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_binget(self):', 'dup': 1}, {'word': 'load_binint', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_binint(self):', 'dup': 1}, {'word': 'load_binint1', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_binint1', 'dup': 1}, {'word': 'load_binint2', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_binint2', 'dup': 1}, {'word': 'load_binpersid', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_binpersid(self):', 'dup': 1}, {'word': 'load_binput', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_binput(self):', 'dup': 1}, {'word': 'load_binstring', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_binstring(self):', 'dup': 1}, {'word': 'load_binunicode', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_binunicode(self):', 'dup': 1}, {'word': 'load_binunicode8', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_binunicode8', 'dup': 1}, {'word': 'load_build', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_build(self):', 'dup': 1}, {'word': 'load_dict', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_dict(self):', 'dup': 1}, {'word': 'load_dup', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_dup(self):', 'dup': 1}, {'word': 'load_empty_dictionary', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_empty_dictionary(self):', 'dup': 1}, {'word': 'load_empty_list', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_empty_list(self):', 'dup': 1}, {'word': 'load_empty_set', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_empty_set(self):', 'dup': 1}, {'word': 'load_empty_tuple', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_empty_tuple(self):', 'dup': 1}, {'word': 'load_ext1', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_ext1', 'dup': 1}, {'word': 'load_ext2', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_ext2', 'dup': 1}, {'word': 'load_ext4', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_ext4', 'dup': 1}, {'word': 'load_false', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_false(self):', 'dup': 1}, {'word': 'load_float', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_float(self):', 'dup': 1}, {'word': 'load_frame', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_frame(self):', 'dup': 1}, {'word': 'load_frozenset', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_frozenset(self):', 'dup': 1}, {'word': 'load_get', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_get(self):', 'dup': 1}, {'word': 'load_global', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_global(self):', 'dup': 1}, {'word': 'load_inst', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_inst(self):', 'dup': 1}, {'word': 'load_int', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_int(self):', 'dup': 1}, {'word': 'load_list', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_list(self):', 'dup': 1}, {'word': 'load_long', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_long(self):', 'dup': 1}, {'word': 'load_long1', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_long1', 'dup': 1}, {'word': 'load_long4', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_long4', 'dup': 1}, {'word': 'load_long_binget', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_long_binget(self):', 'dup': 1}, {'word': 'load_long_binput', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_long_binput(self):', 'dup': 1}, {'word': 'load_mark', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_mark(self):', 'dup': 1}, {'word': 'load_memoize', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_memoize(self):', 'dup': 1}, {'word': 'load_newobj', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_newobj(self):', 'dup': 1}, {'word': 'load_newobj_ex', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_newobj_ex(self):', 'dup': 1}, {'word': 'load_none', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_none(self):', 'dup': 1}, {'word': 'load_obj', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_obj(self):', 'dup': 1}, {'word': 'load_persid', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_persid(self):', 'dup': 1}, {'word': 'load_pop', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_pop(self):', 'dup': 1}, {'word': 'load_pop_mark', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_pop_mark(self):', 'dup': 1}, {'word': 'load_proto', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_proto(self):', 'dup': 1}, {'word': 'load_put', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_put(self):', 'dup': 1}, {'word': 'load_reduce', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_reduce(self):', 'dup': 1}, {'word': 'load_setitem', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_setitem(self):', 'dup': 1}, {'word': 'load_setitems', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_setitems(self):', 'dup': 1}, {'word': 'load_short_binbytes', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_short_binbytes(self):', 'dup': 1}, {'word': 'load_short_binstring', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_short_binstring(self):', 'dup': 1}, {'word': 'load_short_binunicode', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_short_binunicode(self):', 'dup': 1}, {'word': 'load_stack_global', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_stack_global(self):', 'dup': 1}, {'word': 'load_stop', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_stop(self):', 'dup': 1}, {'word': 'load_string', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_string(self):', 'dup': 1}, {'word': 'load_true', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_true(self):', 'dup': 1}, {'word': 'load_tuple', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_tuple(self):', 'dup': 1}, {'word': 'load_tuple1', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_tuple1', 'dup': 1}, {'word': 'load_tuple2', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_tuple2', 'dup': 1}, {'word': 'load_tuple3', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'load_tuple3', 'dup': 1}, {'word': 'load_unicode', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def load_unicode(self):', 'dup': 1}, {'word': 'marker', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def marker(self):', 'dup': 1}, {'word': 'memoize', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def memoize(self, obj):', 'dup': 1}, {'word': 'persistent_id', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def persistent_id(self, obj):', 'dup': 1}, {'word': 'persistent_load', 'menu': '_Unpickler', 'kind': 'm', 'abbr': 'def persistent_load(self, pid):', 'dup': 1}, {'word': 'read', 'menu': '_Unframer', 'kind': 'm', 'abbr': 'def read(self, n):', 'dup': 1}, {'word': 'readline', 'menu': '_Unframer', 'kind': 'm', 'abbr': 'def readline(self):', 'dup': 1}, {'word': 'save', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save(self, obj, save_persistent_id=True):', 'dup': 1}, {'word': 'save_bool', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_bool(self, obj):', 'dup': 1}, {'word': 'save_bytes', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_bytes(self, obj):', 'dup': 1}, {'word': 'save_dict', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_dict(self, obj):', 'dup': 1}, {'word': 'save_float', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_float(self, obj):', 'dup': 1}, {'word': 'save_frozenset', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_frozenset(self, obj):', 'dup': 1}, {'word': 'save_global', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_global(self, obj, name=None):', 'dup': 1}, {'word': 'save_list', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_list(self, obj):', 'dup': 1}, {'word': 'save_long', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_long(self, obj):', 'dup': 1}, {'word': 'save_none', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_none(self, obj):', 'dup': 1}, {'word': 'save_pers', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_pers(self, pid):', 'dup': 1}, {'word': 'save_reduce', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_reduce(self, func, args, state=None, listitems=None,', 'dup': 1}, {'word': 'save_set', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_set(self, obj):', 'dup': 1}, {'word': 'save_str', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_str(self, obj):', 'dup': 1}, {'word': 'save_tuple', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_tuple(self, obj):', 'dup': 1}, {'word': 'save_type', 'menu': '_Pickler', 'kind': 'm', 'abbr': 'def save_type(self, obj):', 'dup': 1}, {'word': 'start_framing', 'menu': '_Framer', 'kind': 'm', 'abbr': 'def start_framing(self):', 'dup': 1}, {'word': 'whichmodule', 'kind': 'f', 'abbr': 'def whichmodule(obj, name, allow_qualname=False):', 'dup': 1}, {'word': 'write', 'menu': '_Framer', 'kind': 'm', 'abbr': 'def write(self, data):', 'dup': 1}]
