[{'word': 'Arguments', 'kind': 'v', 'abbr': 'Arguments = collections.namedtuple(''Arguments'', [''args'', ''kwargs''])', 'dup': 1}, {'word': 'BadYieldError', 'kind': 'c', 'abbr': 'BadYieldError(Exception): <class>', 'dup': 1}, {'word': 'Callback', 'kind': 'c', 'abbr': 'Callback(YieldPoint): <class>', 'dup': 1}, {'word': 'KeyReuseError', 'kind': 'c', 'abbr': 'KeyReuseError(Exception): <class>', 'dup': 1}, {'word': 'LeakedCallbackError', 'kind': 'c', 'abbr': 'LeakedCallbackError(Exception): <class>', 'dup': 1}, {'word': 'Multi', 'kind': 'c', 'abbr': 'Multi(YieldPoint): <class>', 'dup': 1}, {'word': 'Return', 'kind': 'c', 'abbr': 'Return(Exception): <class>', 'dup': 1}, {'word': 'ReturnValueIgnoredError', 'kind': 'c', 'abbr': 'ReturnValueIgnoredError(Exception): <class>', 'dup': 1}, {'word': 'Runner', 'kind': 'c', 'abbr': 'Runner(object): <class>', 'dup': 1}, {'word': 'Task', 'kind': 'c', 'abbr': 'Task(YieldPoint): <class>', 'dup': 1}, {'word': 'UnknownKeyError', 'kind': 'c', 'abbr': 'UnknownKeyError(Exception): <class>', 'dup': 1}, {'word': 'Wait', 'kind': 'c', 'abbr': 'Wait(YieldPoint): <class>', 'dup': 1}, {'word': 'WaitAll', 'kind': 'c', 'abbr': 'WaitAll(YieldPoint): <class>', 'dup': 1}, {'word': 'YieldFuture', 'kind': 'c', 'abbr': 'YieldFuture(YieldPoint): <class>', 'dup': 1}, {'word': 'YieldPoint', 'kind': 'c', 'abbr': 'YieldPoint(object): <class>', 'dup': 1}, {'word': '_NullYieldPoint', 'kind': 'c', 'abbr': '_NullYieldPoint(YieldPoint): <class>', 'dup': 1}, {'word': '__init__', 'menu': 'Multi', 'kind': 'm', 'abbr': 'def __init__(self, children):', 'dup': 1}, {'word': '_null_yield_point', 'kind': 'v', 'abbr': '_null_yield_point = _NullYieldPoint()', 'dup': 1}, {'word': 'coroutine', 'kind': 'f', 'abbr': 'def coroutine(func):', 'dup': 1}, {'word': 'engine', 'kind': 'f', 'abbr': 'def engine(func):', 'dup': 1}, {'word': 'final_callback', 'kind': 'f', 'abbr': 'def final_callback(value):', 'dup': 1}, {'word': 'get_result', 'menu': 'Callback', 'kind': 'm', 'abbr': 'def get_result(self):', 'dup': 1}, {'word': 'handle_exception', 'kind': 'f', 'abbr': 'def handle_exception(typ, value, tb):', 'dup': 1}, {'word': 'inner', 'kind': 'f', 'abbr': 'def inner(*args, **kwargs):', 'dup': 1}, {'word': 'is_ready', 'menu': 'Callback', 'kind': 'm', 'abbr': 'def is_ready(self):', 'dup': 1}, {'word': 'pop_result', 'menu': 'Runner', 'kind': 'm', 'abbr': 'def pop_result(self, key):', 'dup': 1}, {'word': 'register_callback', 'menu': 'Runner', 'kind': 'm', 'abbr': 'def register_callback(self, key):', 'dup': 1}, {'word': 'result_callback', 'menu': 'Runner', 'kind': 'm', 'abbr': 'def result_callback(self, key):', 'dup': 1}, {'word': 'set_result', 'menu': 'Runner', 'kind': 'm', 'abbr': 'def set_result(self, key, result):', 'dup': 1}, {'word': 'start', 'menu': 'Callback', 'kind': 'm', 'abbr': 'def start(self, runner):', 'dup': 1}, {'word': 'wrapper', 'kind': 'f', 'abbr': 'def wrapper(*args, **kwargs):', 'dup': 1}]
