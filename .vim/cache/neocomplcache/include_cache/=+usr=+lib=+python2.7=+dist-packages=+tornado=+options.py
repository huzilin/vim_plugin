[{'word': 'Error', 'kind': 'c', 'abbr': 'Error(Exception): <class>', 'dup': 1}, {'word': 'OptionParser', 'kind': 'c', 'abbr': 'OptionParser(object): <class>', 'dup': 1}, {'word': '_DATETIME_FORMATS', 'menu': '_Option', 'kind': 'v', 'abbr': '_DATETIME_FORMATS = [', 'dup': 1}, {'word': '_FLOAT_PATTERN', 'menu': '_Option', 'kind': 'v', 'abbr': '_FLOAT_PATTERN = r''[-+]?(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][-+]?\d+)?''', 'dup': 1}, {'word': '_Mockable', 'kind': 'c', 'abbr': '_Mockable(object): <class>', 'dup': 1}, {'word': '_Option', 'kind': 'c', 'abbr': '_Option(object): <class>', 'dup': 1}, {'word': '_TIMEDELTA_ABBREVS', 'menu': '_Option', 'kind': 'v', 'abbr': '_TIMEDELTA_ABBREVS = [', 'dup': 1}, {'word': '_TIMEDELTA_ABBREV_DICT', 'menu': '_Option', 'kind': 'v', 'abbr': '_TIMEDELTA_ABBREV_DICT = dict(', 'dup': 1}, {'word': '_TIMEDELTA_PATTERN', 'menu': '_Option', 'kind': 'v', 'abbr': '_TIMEDELTA_PATTERN = re.compile(', 'dup': 1}, {'word': '__init__', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def __init__(self):', 'dup': 1}, {'word': '_help_callback', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def _help_callback(self, value):', 'dup': 1}, {'word': '_parse_bool', 'menu': '_Option', 'kind': 'm', 'abbr': 'def _parse_bool(self, value):', 'dup': 1}, {'word': '_parse_datetime', 'menu': '_Option', 'kind': 'm', 'abbr': 'def _parse_datetime(self, value):', 'dup': 1}, {'word': '_parse_string', 'menu': '_Option', 'kind': 'm', 'abbr': 'def _parse_string(self, value):', 'dup': 1}, {'word': '_parse_timedelta', 'menu': '_Option', 'kind': 'm', 'abbr': 'def _parse_timedelta(self, value):', 'dup': 1}, {'word': 'add_parse_callback', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def add_parse_callback(self, callback):', 'dup': 1}, {'word': 'as_dict', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def as_dict(self):', 'dup': 1}, {'word': 'define', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def define(self, name, default=None, type=None, help=None, metavar=None,', 'dup': 1}, {'word': 'group_dict', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def group_dict(self, group):', 'dup': 1}, {'word': 'groups', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def groups(self):', 'dup': 1}, {'word': 'items', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def items(self):', 'dup': 1}, {'word': 'mockable', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def mockable(self):', 'dup': 1}, {'word': 'options', 'kind': 'v', 'abbr': 'options = OptionParser()', 'dup': 1}, {'word': 'parse', 'menu': '_Option', 'kind': 'm', 'abbr': 'def parse(self, value):', 'dup': 1}, {'word': 'parse_command_line', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def parse_command_line(self, args=None, final=True):', 'dup': 1}, {'word': 'parse_config_file', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def parse_config_file(self, path, final=True):', 'dup': 1}, {'word': 'print_help', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def print_help(self, file=None):', 'dup': 1}, {'word': 'run_parse_callbacks', 'menu': 'OptionParser', 'kind': 'm', 'abbr': 'def run_parse_callbacks(self):', 'dup': 1}, {'word': 'value', 'menu': '_Option', 'kind': 'm', 'abbr': 'def value(self):', 'dup': 1}]
