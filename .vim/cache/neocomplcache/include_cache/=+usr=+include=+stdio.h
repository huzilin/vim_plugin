[{'word': 'BUFSIZ', 'kind': 'd', 'abbr': 'BUFSIZ', 'dup': 1}, {'word': 'FILE', 'kind': 't', 'abbr': 'FILE <typedef struct _IO_FILE>', 'dup': 1}, {'word': 'P_tmpdir', 'kind': 'd', 'abbr': 'P_tmpdir', 'dup': 1}, {'word': 'SEEK_CUR', 'kind': 'd', 'abbr': 'SEEK_CUR', 'dup': 1}, {'word': 'SEEK_DATA', 'kind': 'd', 'abbr': 'SEEK_DATA', 'dup': 1}, {'word': 'SEEK_END', 'kind': 'd', 'abbr': 'SEEK_END', 'dup': 1}, {'word': 'SEEK_HOLE', 'kind': 'd', 'abbr': 'SEEK_HOLE', 'dup': 1}, {'word': 'SEEK_SET', 'kind': 'd', 'abbr': 'SEEK_SET', 'dup': 1}, {'word': 'clearerr', 'kind': 'p', 'abbr': 'clearerr(FILE *__stream)', 'dup': 1}, {'word': 'clearerr_unlocked', 'kind': 'p', 'abbr': 'clearerr_unlocked(FILE *__stream)', 'dup': 1}, {'word': 'ctermid', 'kind': 'p', 'abbr': 'ctermid(char *__s)', 'dup': 1}, {'word': 'cuserid', 'kind': 'p', 'abbr': 'cuserid(char *__s)', 'dup': 1}, {'word': 'dprintf', 'kind': 'p', 'abbr': 'dprintf(int __fd, const char *__restrict __fmt, ...)', 'dup': 1}, {'word': 'fclose', 'kind': 'p', 'abbr': 'fclose(FILE *__stream)', 'dup': 1}, {'word': 'fcloseall', 'kind': 'p', 'abbr': 'fcloseall(void)', 'dup': 1}, {'word': 'fdopen', 'kind': 'p', 'abbr': 'fdopen(int __fd, const char *__modes)', 'dup': 1}, {'word': 'feof', 'kind': 'p', 'abbr': 'feof(FILE *__stream)', 'dup': 1}, {'word': 'feof_unlocked', 'kind': 'p', 'abbr': 'feof_unlocked(FILE *__stream)', 'dup': 1}, {'word': 'ferror', 'kind': 'p', 'abbr': 'ferror(FILE *__stream)', 'dup': 1}, {'word': 'ferror_unlocked', 'kind': 'p', 'abbr': 'ferror_unlocked(FILE *__stream)', 'dup': 1}, {'word': 'fflush', 'kind': 'p', 'abbr': 'fflush(FILE *__stream)', 'dup': 1}, {'word': 'fflush_unlocked', 'kind': 'p', 'abbr': 'fflush_unlocked(FILE *__stream)', 'dup': 1}, {'word': 'fgetc', 'kind': 'p', 'abbr': 'fgetc(FILE *__stream)', 'dup': 1}, {'word': 'fgetc_unlocked', 'kind': 'p', 'abbr': 'fgetc_unlocked(FILE *__stream)', 'dup': 1}, {'word': 'fgetpos', 'kind': 'p', 'abbr': 'fgetpos(FILE *__restrict __stream, fpos_t *__restrict __pos)', 'dup': 1}, {'word': 'fgetpos64', 'kind': 'p', 'abbr': 'fgetpos64(FILE *__restrict __stream, fpos64_t *__restrict __pos)', 'dup': 1}, {'word': 'fgets', 'kind': 'p', 'abbr': 'fgets(char *__restrict __s, int __n, FILE *__restrict __stream)', 'dup': 1}, {'word': 'fgets_unlocked', 'kind': 'p', 'abbr': 'fgets_unlocked(char *__restrict __s, int __n, FILE *__restrict __stream)', 'dup': 1}, {'word': 'fileno', 'kind': 'p', 'abbr': 'fileno(FILE *__stream)', 'dup': 1}, {'word': 'fileno_unlocked', 'kind': 'p', 'abbr': 'fileno_unlocked(FILE *__stream)', 'dup': 1}, {'word': 'flockfile', 'kind': 'p', 'abbr': 'flockfile(FILE *__stream)', 'dup': 1}, {'word': 'fmemopen', 'kind': 'p', 'abbr': 'fmemopen(void *__s, size_t __len, const char *__modes)', 'dup': 1}, {'word': 'fopen', 'kind': 'p', 'abbr': 'fopen(const char *__restrict __filename, const char *__restrict __modes)', 'dup': 1}, {'word': 'fopen64', 'kind': 'p', 'abbr': 'fopen64(const char *__restrict __filename, const char *__restrict __modes)', 'dup': 1}, {'word': 'fopencookie', 'kind': 'p', 'abbr': 'fopencookie(void *__restrict __magic_cookie, const char *__restrict __modes, _IO_cookie_io_functions_t __io_funcs)', 'dup': 1}, {'word': 'fpos64_t', 'kind': 't', 'abbr': 'fpos64_t', 'dup': 1}, {'word': 'fpos_t', 'kind': 't', 'abbr': 'fpos_t <typedef _G_fpos_t>', 'dup': 1}, {'word': 'fprintf', 'kind': 'p', 'abbr': 'fprintf(FILE *__restrict __stream, const char *__restrict __format, ...)', 'dup': 1}, {'word': 'fputc', 'kind': 'p', 'abbr': 'fputc(int __c, FILE *__stream)', 'dup': 1}, {'word': 'fputc_unlocked', 'kind': 'p', 'abbr': 'fputc_unlocked(int __c, FILE *__stream)', 'dup': 1}, {'word': 'fputs', 'kind': 'p', 'abbr': 'fputs(const char *__restrict __s, FILE *__restrict __stream)', 'dup': 1}, {'word': 'fputs_unlocked', 'kind': 'p', 'abbr': 'fputs_unlocked(const char *__restrict __s, FILE *__restrict __stream)', 'dup': 1}, {'word': 'fread', 'kind': 'p', 'abbr': 'fread(void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream)', 'dup': 1}, {'word': 'fread_unlocked', 'kind': 'p', 'abbr': 'fread_unlocked(void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream)', 'dup': 1}, {'word': 'freopen', 'kind': 'p', 'abbr': 'freopen(const char *__restrict __filename, const char *__restrict __modes, FILE *__restrict __stream)', 'dup': 1}, {'word': 'freopen64', 'kind': 'p', 'abbr': 'freopen64(const char *__restrict __filename, const char *__restrict __modes, FILE *__restrict __stream)', 'dup': 1}, {'word': 'fscanf', 'kind': 'p', 'abbr': 'fscanf(FILE *__restrict __stream, const char *__restrict __format, ...)', 'dup': 1}, {'word': 'fseek', 'kind': 'p', 'abbr': 'fseek(FILE *__stream, long int __off, int __whence)', 'dup': 1}, {'word': 'fseeko', 'kind': 'p', 'abbr': 'fseeko(FILE *__stream, __off_t __off, int __whence)', 'dup': 1}, {'word': 'fseeko64', 'kind': 'p', 'abbr': 'fseeko64(FILE *__stream, __off64_t __off, int __whence)', 'dup': 1}, {'word': 'fsetpos', 'kind': 'p', 'abbr': 'fsetpos(FILE *__stream, const fpos_t *__pos)', 'dup': 1}, {'word': 'fsetpos64', 'kind': 'p', 'abbr': 'fsetpos64(FILE *__stream, const fpos64_t *__pos)', 'dup': 1}, {'word': 'ftell', 'kind': 'p', 'abbr': 'ftell(FILE *__stream)', 'dup': 1}, {'word': 'ftello', 'kind': 'p', 'abbr': 'ftello(FILE *__stream)', 'dup': 1}, {'word': 'ftello64', 'kind': 'p', 'abbr': 'ftello64(FILE *__stream)', 'dup': 1}, {'word': 'ftrylockfile', 'kind': 'p', 'abbr': 'ftrylockfile(FILE *__stream)', 'dup': 1}, {'word': 'funlockfile', 'kind': 'p', 'abbr': 'funlockfile(FILE *__stream)', 'dup': 1}, {'word': 'fwrite', 'kind': 'p', 'abbr': 'fwrite(const void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __s)', 'dup': 1}, {'word': 'fwrite_unlocked', 'kind': 'p', 'abbr': 'fwrite_unlocked(const void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream)', 'dup': 1}, {'word': 'getc', 'kind': 'p', 'abbr': 'getc(FILE *__stream)', 'dup': 1}, {'word': 'getc_unlocked', 'kind': 'p', 'abbr': 'getc_unlocked(FILE *__stream)', 'dup': 1}, {'word': 'getchar', 'kind': 'p', 'abbr': 'getchar(void)', 'dup': 1}, {'word': 'getchar_unlocked', 'kind': 'p', 'abbr': 'getchar_unlocked(void)', 'dup': 1}, {'word': 'getdelim', 'kind': 'p', 'abbr': 'getdelim(char **__restrict __lineptr, size_t *__restrict __n, int __delimiter, FILE *__restrict __stream)', 'dup': 1}, {'word': 'getline', 'kind': 'p', 'abbr': 'getline(char **__restrict __lineptr, size_t *__restrict __n, FILE *__restrict __stream)', 'dup': 1}, {'word': 'getw', 'kind': 'p', 'abbr': 'getw(FILE *__stream)', 'dup': 1}, {'word': 'off64_t', 'kind': 't', 'abbr': 'off64_t', 'dup': 1}, {'word': 'off_t', 'kind': 't', 'abbr': 'off_t', 'dup': 1}, {'word': 'open_memstream', 'kind': 'p', 'abbr': 'open_memstream(char **__bufloc, size_t *__sizeloc)', 'dup': 1}, {'word': 'pclose', 'kind': 'p', 'abbr': 'pclose(FILE *__stream)', 'dup': 1}, {'word': 'perror', 'kind': 'p', 'abbr': 'perror(const char *__s)', 'dup': 1}, {'word': 'popen', 'kind': 'p', 'abbr': 'popen(const char *__command, const char *__modes)', 'dup': 1}, {'word': 'printf', 'kind': 'p', 'abbr': 'printf(const char *__restrict __format, ...)', 'dup': 1}, {'word': 'putc', 'kind': 'p', 'abbr': 'putc(int __c, FILE *__stream)', 'dup': 1}, {'word': 'putc_unlocked', 'kind': 'p', 'abbr': 'putc_unlocked(int __c, FILE *__stream)', 'dup': 1}, {'word': 'putchar', 'kind': 'p', 'abbr': 'putchar(int __c)', 'dup': 1}, {'word': 'putchar_unlocked', 'kind': 'p', 'abbr': 'putchar_unlocked(int __c)', 'dup': 1}, {'word': 'puts', 'kind': 'p', 'abbr': 'puts(const char *__s)', 'dup': 1}, {'word': 'putw', 'kind': 'p', 'abbr': 'putw(int __w, FILE *__stream)', 'dup': 1}, {'word': 'remove', 'kind': 'p', 'abbr': 'remove(const char *__filename)', 'dup': 1}, {'word': 'rename', 'kind': 'p', 'abbr': 'rename(const char *__old, const char *__new)', 'dup': 1}, {'word': 'renameat', 'kind': 'p', 'abbr': 'renameat(int __oldfd, const char *__old, int __newfd, const char *__new)', 'dup': 1}, {'word': 'rewind', 'kind': 'p', 'abbr': 'rewind(FILE *__stream)', 'dup': 1}, {'word': 'scanf', 'kind': 'p', 'abbr': 'scanf(const char *__restrict __format, ...)', 'dup': 1}, {'word': 'setbuf', 'kind': 'p', 'abbr': 'setbuf(FILE *__restrict __stream, char *__restrict __buf)', 'dup': 1}, {'word': 'setbuffer', 'kind': 'p', 'abbr': 'setbuffer(FILE *__restrict __stream, char *__restrict __buf, size_t __size)', 'dup': 1}, {'word': 'setlinebuf', 'kind': 'p', 'abbr': 'setlinebuf(FILE *__stream)', 'dup': 1}, {'word': 'setvbuf', 'kind': 'p', 'abbr': 'setvbuf(FILE *__restrict __stream, char *__restrict __buf, int __modes, size_t __n)', 'dup': 1}, {'word': 'sscanf', 'kind': 'p', 'abbr': 'sscanf(const char *__restrict __s, const char *__restrict __format, ...)', 'dup': 1}, {'word': 'ssize_t', 'kind': 't', 'abbr': 'ssize_t <typedef __ssize_t>', 'dup': 1}, {'word': 'stderr', 'kind': 'd', 'abbr': 'stderr', 'dup': 1}, {'word': 'stdin', 'kind': 'd', 'abbr': 'stdin', 'dup': 1}, {'word': 'stdout', 'kind': 'd', 'abbr': 'stdout', 'dup': 1}, {'word': 'tempnam', 'kind': 'p', 'abbr': 'tempnam(const char *__dir, const char *__pfx)', 'dup': 1}, {'word': 'tmpfile', 'kind': 'p', 'abbr': 'tmpfile(void)', 'dup': 1}, {'word': 'tmpfile64', 'kind': 'p', 'abbr': 'tmpfile64(void)', 'dup': 1}, {'word': 'tmpnam', 'kind': 'p', 'abbr': 'tmpnam(char *__s)', 'dup': 1}, {'word': 'tmpnam_r', 'kind': 'p', 'abbr': 'tmpnam_r(char *__s)', 'dup': 1}, {'word': 'ungetc', 'kind': 'p', 'abbr': 'ungetc(int __c, FILE *__stream)', 'dup': 1}, {'word': 'va_list', 'kind': 't', 'abbr': 'va_list <typedef _G_va_list>', 'dup': 1}, {'word': 'vdprintf', 'kind': 'p', 'abbr': 'vdprintf(int __fd, const char *__restrict __fmt, _G_va_list __arg)', 'dup': 1}, {'word': 'vfprintf', 'kind': 'p', 'abbr': 'vfprintf(FILE *__restrict __s, const char *__restrict __format, _G_va_list __arg)', 'dup': 1}, {'word': 'vfscanf', 'kind': 'p', 'abbr': 'vfscanf(FILE *__restrict __s, const char *__restrict __format, _G_va_list __arg)', 'dup': 1}, {'word': 'vprintf', 'kind': 'p', 'abbr': 'vprintf(const char *__restrict __format, _G_va_list __arg)', 'dup': 1}, {'word': 'vscanf', 'kind': 'p', 'abbr': 'vscanf(const char *__restrict __format, _G_va_list __arg)', 'dup': 1}, {'word': 'vsscanf', 'kind': 'p', 'abbr': 'vsscanf(const char *__restrict __s, const char *__restrict __format, _G_va_list __arg)', 'dup': 1}]
