DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `DS60_ticket_left`(IN `train_info_in` varchar(50),IN `purpose_code_in` VARCHAR(255),IN `inner_code_in` Char(3),IN `range_in` tinyint,IN `sale_mode_in` Char(1),IN `table_name_in` VARCHAR(50),IN `flag_in` tinyint,IN `out_in` tinyint,IN `screen_flag_in` TINYINT,OUT `return_out` int)
BEGIN

DECLARE  l_version   VARCHAR(30);
DECLARE  l_start_time  CHAR(4); Declare  l_belong_seat_type 		CHAR(1);
Declare  l_station_no CHAR(2) ; Declare l_share_train_flag Integer; 
Declare  l_coach_no CHAR(2) ; Declare    l_city_code  CHAR(4) ;
Declare  l_from_station_no CHAR(2); Declare   l_to_station_no CHAR(2)     ;
Declare  l_start_station_telecode CHAR(3)  ; Declare    l_end_station_telecode CHAR(3)   ;
Declare  l_original_station_telecode CHAR(3)     ;Declare   l_share_flag CHAR(1)    ;
Declare   l_limit_station 			CHAR(2)    ;Declare  l_transform_no CHAR(2) ; 
Declare   l_share_string VARCHAR(8192);Declare  l_transform_date CHAR(8)      ;
Declare   l_seat_type_code 		CHAR(1)    ;Declare   l_board_bureau_code  CHAR(1)    ;
Declare   l_board_subbureau_code  CHAR(2)    ;Declare   l_Rowcount INTEGER    ;
Declare   l_ticket_bureau   CHAR(1)    ;Declare    l_sale_subbureau CHAR(2)   ;
Declare   l_diff_day  INTEGER     ;Declare      l_error	 INTEGER ;
Declare   l_max_day INTEGER    ;Declare    l_seat_feature	 	CHAR(1)	   ;
Declare   l_today  CHAR(8)    ;Declare  l_start_datetime  DATETIME   ;
Declare   l_ticket_quantity  INTEGER;Declare   l_ahead_time INTEGER ;
Declare   l_up_quantity  INTEGER;Declare l_station_name CHAR(10)  ;
Declare   l_mid_quantity  INTEGER;Declare l_sale_bureau CHAR(1) ;
Declare   l_down_quantity  Integer ;Declare  l_location_code  CHAR(2);
Declare   l_far_from_station_no CHAR(2) ;Declare  l_my_center_code  CHAR(2) ;
Declare   l_assign_station  CHAR(3);Declare l_min_station_no CHAR(2)  ;
Declare   l_train_code CHAR(12)  ;Declare l_start_station_name CHAR(10)  ;
Declare   l_From_Range TINYINT ;Declare  l_end_station_name CHAR(10)  ;
Declare   l_To_Range INTEGER ;Declare l_train_type  CHAR(1)  ;
Declare   l_day_difference_from INTEGER  ;Declare l_start_sale_time CHAR(4)	  ;
Declare   l_day_difference_to INTEGER ;Declare  l_purpose_num INTEGER ;
Declare   l_tmp_range CHAR(1)	  ;Declare  l_union_flag CHAR(1)  ;
Declare   l_tmp_start_coach_no CHAR(2) ;Declare  Is_Bed  INTEGER;
Declare   l_tmp_end_coach_no CHAR(2) ;Declare l_bed_code_list VARCHAR(30)  ;
Declare   l_sql  VARCHAR(1600)  ;Declare l_left_base_name VARCHAR(40) ;
Declare   ls_from_range  CHAR(1) ;Declare ls_to_range CHAR(1)  ;
Declare   l_w_seat_type_code  CHAR(1) ;Declare  l_w_flag CHAR(1) ;
Declare   l_command_code CHAR(1)  ;Declare l_arrive_train_date CHAR(8)  ;
Declare   l_fetch_w_seat INTEGER ;Declare l_ticket_source CHAR(1) ;
Declare   l_wseat_type_code CHAR(1)   ;Declare l_d1 DATETIME ;
Declare   l_show_time  INTEGER ;Declare  l_share_to_wseat CHAR(1) ;
Declare   ls_ticket_quantity  VARCHAR(5) ;Declare ls_up_quantity VARCHAR(5) ;
Declare   ls_mid_quantity VARCHAR(5) ;Declare ls_down_quantity VARCHAR(5) ;
Declare   ls_range  	CHAR(1)	;Declare l_TVM_flag  INTEGER ;
Declare   l_purpose_code_cache  VARCHAR(255) ;Declare l_arrive_date CHAR(8) ;
Declare   l_to_station_no_limit CHAR(2)  ;Declare l_train_date CHAR(8) ;
Declare   l_train_no CHAR(12)  ;Declare l_from_station CHAR(3) ;
Declare   l_to_station CHAR(3)  ;Declare  l_start_date CHAR(8) ;
Declare   l_Row  INTEGER ;Declare l_stop_date CHAR(8)  ;
Declare   l_tmp_purpose VARCHAR(255)  ;Declare  l_start_train_date CHAR(8) ;
Declare   l_schedule_coach CHAR(2)  ;Declare l_return_code INTEGER ;
Declare   l_ticket_range INTEGER  ;Declare l_delete_flag INTEGER ;
Declare   l_running_style  INTEGER ;Declare l_running_rule INTEGER ;
Declare   l_date_after  INTEGER ;Declare l_original_bureau_code CHAR(1) ;
Declare   t_train_no char(12)  ;Declare t_train_date char(8)  ;
Declare   t_station_no char(2)  ;Declare t_assign_station char(3) ;
Declare   t_far_from_station_no  char(2) ;Declare t_limit_station char(2) ;
Declare   t_coach_no  char(2) ;Declare  t_seat_type_code char(1) ;
Declare   t_purpose_code char(2)  ;Declare t_range Integer ;
Declare   t_ticket_quantity int   ;Declare t_up_quantity  int;
Declare   t_mid_quantity Int  ;Declare  t_down_quantity Int ;
Declare   t_wseat_type_code  CHAR(1) ;Declare t_seat_feature CHAR(1) ;
Declare   t_ticket_source CHAR(1)  ;Declare t_inner_code CHAR(3) ;
Declare   l_w_seat_type CHAR(1)  ;Declare  l_train_type_code CHAR(1);
Declare   l_train_period  TINYINT ;Declare  tmp_start_time CHAR(4);
Declare   tmp_start_datetime DATETIME  ;Declare l_center_notice VARCHAR(30) ;
Declare   l_station_list VARCHAR(512)  ;Declare l_purpose_cache VARCHAR(255) ;
Declare   l_purpose_list  VARCHAR(255) ;Declare l_start_bureau_code CHAR(1) ;
Declare   l_min_train_date CHAR(8)  ;Declare l_max_train_date  CHAR(8) ;
Declare   temp_board_station CHAR(10)   ;Declare temp_end_station CHAR(10) ;
Declare   temp_board_train_date CHAR(8)	  ;Declare  temp_directions CHAR(10) ;
Declare   temp_telecode_list VARCHAR(255)  ;Declare temp_station_train_code VARCHAR(255);
Declare   temp_purposes VARCHAR(255)  ;Declare temp_inner_code CHAR(3) ;
Declare   temp_range  INTEGER ;Declare  temp_flag Integer ;
Declare   temp_seat_type_list  VARCHAR(255) ;Declare  temp_out INTEGER;
Declare   temp_kind  CHAR(10) ;
Declare   l_t0 INTEGER  ;Declare  l_t1 INTEGER;
Declare   l_t2 INTEGER  ;Declare l_t3 INTEGER ;
Declare   l_t4 INTEGER  ;Declare l_t5 INTEGER  ;
Declare   l_t6 INTEGER  ;Declare  l_t7 INTEGER;
Declare   l_t8 INTEGER  ;Declare  l_t9 INTEGER;
Declare   l_d2 datetime  ;Declare  l_d3 datetime;
Declare   l_d4 datetime  ;Declare l_d5 datetime ;
Declare   l_d6 datetime  ;
Declare   l_seat_type_list varchar(40)  ;Declare l_relation_code  CHAR(3);
Declare   l_start_name varchar(10) ;Declare l_auto_share  CHAR(1);
Declare   l_end_name varchar(10)  ;Declare l_cancel_purpose VARCHAR(255) ;
Declare   l_local_bureau  char(1) ;Declare l_purpose_init char(2)  ;
Declare   l_train_class_code char(1)	  ;Declare  C_from_period tinyint ;
Declare   C_control_min_date char(8)  ;Declare C_start_date char(8) ;
Declare   C_train_period TINYINT  ;Declare l_now_datetime VARCHAR(30) ;
Declare record_not_found Integer Default 0;
Declare lab1_s Integer;
Declare lab_lable_s Integer;

declare ccount1 int default 0;
declare ccount2 int default 0;
declare tmp_train_group_count int ;


Declare Continue handler For Sqlstate '02000' Set record_not_found = 1;
      
Set Transaction Isolation Level Read uncommitted;

Set l_version = 'Ver.20150114.11:24';


empty_tmp_table_lab:loop
	begin
		declare train_info_in_count int;
		set @train_info_in_count=null;
		Set @l_sql = concat('select count(*) into @train_info_in_count from ',train_info_in);
		prepare stmt_1 from @l_sql;
		EXECUTE stmt_1;
		set train_info_in_count=@train_info_in_count;
		set @train_info_in_count=null;
		drop PREPARE stmt_1;
		 if out_in=9 then
			select 'DS60_ticket_left.0000====come in tmp table count=',train_info_in_count;
		 end if;
		if train_info_in_count=0 then
			leave empty_tmp_table_lab;
		end if;
	end;	

If train_info_in Is Null Then
   Set train_info_in = '';
End If;
If purpose_code_in Is Null Then
   Set purpose_code_in = '';
End If;
If inner_code_in Is Null Then
   Set inner_code_in = '';
End If;
If range_in Is Null Then
   Set range_in = 4;
End If;
If sale_mode_in Is Null Then
   Set sale_mode_in = 'A';
End If;
If table_name_in Is Null Then
   Set table_name_in = '';
End If;
If flag_in Is Null Then
   Set flag_in = 0;
End If;
If out_in Is Null Then
   Set out_in = 0;
End If;
If @screen_flag Is Null Then
   Set @screen_flag = 0;
End If;


Set l_d1 = NOW(),l_seat_type_list = '0123456789ABCDEFGHIJKLMNOPQRS';



CREATE Temporary TABLE if not exists  tmp_query_train_info
	(train_date 	 CHAR(8) NOT NULL,
	 train_no		 CHAR(12) NOT NULL,
	 train_code 	 CHAR(8) NOT NULL,
	 from_station	 CHAR(10) NOT NULL,
	 to_station		 CHAR(10) NOT NULL,
	 flag				 INTEGER NOT NULL
	 );
delete from  tmp_query_train_info;

CREATE Temporary TABLE if not exists tmp_query_info
	( train_no		 CHAR(12) NOT NULL,
	 train_code 	 CHAR(8) NOT NULL
	 );
    delete from tmp_query_info;


 
CREATE Temporary TABLE if not exists   DS60_ticket_left_tmp_train_para_define
	(
		inner_code char(3)   NOT NULL,
		start_date char(8)   NOT NULL,
		stop_date char(8)   NOT NULL,
		train_code char(8)   NOT NULL,
		start_station_name char(10)   NOT NULL,
		end_station_name char(10)   NOT NULL,
		station_telecode char(3)   NOT NULL,
		train_type char(1)   NOT NULL,
		seat_type_code char(1)   NOT NULL,
		ticket_type tinyint   NOT NULL,
		purpose_code char(2)   NOT NULL,
		table_range tinyint   NOT NULL,
		control_day tinyint   NOT NULL,
		control_train_day char(8)   NOT NULL,
		ahead_time int   NOT NULL,
		location_code char(2)   NOT NULL,
		office_no char(7)   NOT NULL,
		window_no tinyint   NOT NULL,
		operater_no char(4)   NOT NULL,
		operater_time datetime   NOT NULL,
		flag1 char(10)   NOT NULL,
		flag2 char(10)   NOT NULL,
		group_code         char(20) NOT NULL,
		level_flag         char(1)  NOT NULL,
		from_period        tinyint  NOT NULL,
		control_min_date   char(8)  NOT NULL,
		train_class        char(1)  NOT NULL,
		demand_id          char(18) NOT NULL,
		flag3              char(30) NOT NULL,
		flag4              char(30) NOT NULL,
		flag5              char(30) NOT NULL,
		flag6              char(30) NOT NULL,
		flag7              char(30) NOT NULL,
		flag8              char(30) NOT NULL

	);
    delete from DS60_ticket_left_tmp_train_para_define;


create Temporary table if not exists  tmp_union_station
(station_telecode char(3) NOT NULL);
delete from tmp_union_station;

create Temporary table If Not Exists tmp_seat_info 
(	seat_type_code char(1) NOT NULL,
	purpose_code	CHAR(2) NOT NULL,
	table_range   INTEGER NOT Null 
);
Truncate Table tmp_seat_info;

CREATE Temporary TABLE If Not Exists tmp_left_center
(
assign_station char(3)   NOT NULL,
train_no char(12)   NOT NULL,
train_date char(8)   NOT NULL,
station_no char(2)   NOT NULL,
far_from_station_no char(2)   NOT NULL,
limit_station char(2)   NOT NULL,
coach_no char(2)   NOT NULL,
seat_type_code char(1)   NOT NULL,
purpose_code char(2)   NOT NULL,
ticket_quantity int   NOT NULL,
up_quantity int   NOT NULL,
mid_quantity int   NOT NULL,
down_quantity int   NOT NULL,
ticket_source char(1)   NOT NULL,
table_range INTEGER   NOT NULL,
inner_code char(7)   NOT NULL,
wseat_type_code char(1) ,
seat_feature char(1) );
Truncate Table tmp_left_center;

CREATE Temporary TABLE If Not Exists tmp_left_base_center
(
assign_station char(3)   NOT NULL,
train_no char(12)   NOT NULL,
train_date char(8)   NOT NULL,
station_no char(2)   NOT NULL,
far_from_station_no char(2)   NOT NULL,
limit_station char(2)   NOT NULL,
coach_no char(2)   NOT NULL,
seat_type_code char(1)   NOT NULL,
purpose_code char(2)   NOT NULL,
ticket_quantity int   NOT NULL,
up_quantity int   NOT NULL,
mid_quantity int   NOT NULL,
down_quantity int   NOT NULL,
ticket_source char(1)   NOT NULL,
table_range INTEGER   NOT NULL,
inner_code char(7)   NOT NULL,
wseat_type_code char(1) ,
seat_feature char(1) );
Truncate Table tmp_left_base_center;

CREATE Temporary TABLE If Not Exists tmp_left_base
(
assign_station char(3)   NOT NULL,
train_no char(12)   NOT NULL,
train_date char(8)   NOT NULL,
station_no char(2)   NOT NULL,
far_from_station_no char(2)   NOT NULL,
limit_station char(2)   NOT NULL,
coach_no char(2)   NOT NULL,
seat_type_code char(1)   NOT NULL,
purpose_code char(2)   NOT NULL,
ticket_quantity int   NOT NULL,
up_quantity int   NOT NULL,
mid_quantity int   NOT NULL,
down_quantity int   NOT NULL,
ticket_source char(1)   NOT NULL,
table_range INTEGER   NOT NULL,
inner_code char(7)   NOT NULL,
wseat_type_code char(1) ,
seat_feature char(1) 
,index tmp_left_base_idx(train_date,train_no)
);
Truncate Table tmp_left_base;




CREATE Temporary TABLE if not exists tmp_stop_time
(
start_date char(8)   NOT NULL,
stop_date char(8)   NOT NULL,
train_no char(12)   NOT NULL,
station_name char(10)   NOT NULL,
station_telecode char(3)   NOT NULL,
station_no varchar(2)   NOT NULL,
station_train_code char(8)   NOT NULL,
bureau_code char(1)   NOT NULL,
subbureau_code char(2)   NOT NULL,
day_difference INTEGER   NOT NULL,
arrive_time char(4)   NOT NULL,
start_time char(4)   NOT Null,
KEY `idx_st`(`station_telecode`)
);
delete from  tmp_stop_time;


CREATE Temporary TABLE if not exists tmp_train_dir
(
	start_date char(8)   NOT NULL,
	stop_date char(8)   NOT NULL,
	train_code char(8)   NOT NULL,
	subbureau_code char(2)   NOT NULL,
	double_id char(1)   NOT NULL,
	schema_id char(1)   NOT NULL,
	running_style INTEGER   NOT NULL,
	running_rule int   NOT NULL,
	start_station_name char(10)   NOT NULL,
	end_station_name char(10)   NOT NULL,
	train_type_code char(1)   NOT NULL,
	train_class_code char(1)   NOT NULL,
	seat_types int   NOT NULL,
	train_group INTEGER   NOT NULL,
	belong_line1 INTEGER   NOT NULL,
	price_style1 char(1)   NOT NULL,
	belong_line2 INTEGER   NOT NULL,
	price_style2 char(1)   NOT NULL,
	belong_line3 INTEGER   NOT NULL,
	price_style3 char(1)   NOT NULL,
	belong_line4 INTEGER   NOT NULL,
	price_style4 char(1)   NOT NULL,
	belong_line5 INTEGER   NOT NULL,
	price_style5 char(1)   NOT NULL,
	service_type char(1)   NOT NULL,
	price_style char(1)   NOT NULL,
	origin char(2)   NOT NULL
);
delete from tmp_train_dir;

CREATE Temporary TABLE If Not Exists tmp_center_notice
(
	inner_code char(3)   NOT NULL,
	start_date char(8)   NOT NULL,
	stop_date char(8)   NOT NULL,
	train_no char(12)   NOT NULL,
	running_style INTEGER   NOT NULL,
	running_rule int   NOT NULL,
	station_no char(2)   NOT NULL,
	station_telecode char(3)   NOT NULL,
	station_name char(10)   NOT NULL,
	board_train_code char(8)   NOT NULL,
	command_no char(7)   NOT NULL,
	command_code char(1)   NOT NULL,
	inform_type char(1)   NOT NULL,
	day_difference INTEGER   NOT NULL,
	arrive_time char(4)   NOT NULL,
	start_time char(4)   NOT NULL,
	time_interval INTEGER   NOT NULL,
	command_id char(16)   NOT NULL,
	operate_time datetime   NOT NULL,
	operater_no char(4)   NOT NULL,
	operater_name char(8)   NOT NULL,
	command_enable INTEGER   NOT NULL
);
Truncate Table tmp_center_notice;


CREATE Temporary TABLE if not exists  tmp_center_notice1
(
	inner_code char(3)   NOT NULL,
	start_date char(8)   NOT NULL,
	stop_date char(8)   NOT NULL,
	train_no char(12)   NOT NULL,
	running_style INTEGER   NOT NULL,
	running_rule int   NOT NULL,
	station_no char(2)   NOT NULL,
	station_telecode char(3)   NOT NULL,
	station_name char(10)   NOT NULL,
	board_train_code char(8)   NOT NULL,
	command_no char(7)   NOT NULL,
	command_code char(1)   NOT NULL,
	inform_type char(1)   NOT NULL,
	day_difference INTEGER   NOT NULL,
	arrive_time char(4)   NOT NULL,
	start_time char(4)   NOT NULL,
	time_interval INTEGER   NOT NULL,
	command_id char(16)   NOT NULL,
	operate_time datetime   NOT NULL,
	operater_no char(4)   NOT NULL,
	operater_name char(8)   NOT NULL,
	command_enable INTEGER   NOT NULL
);
delete from  tmp_center_notice1;


CREATE Temporary TABLE if not exists  tmp_cancel_limit_define
(
inner_code char(3)   NOT NULL,
start_date char(8)   NOT NULL,
stop_date char(8)   NOT NULL,
train_code char(8)   NOT NULL,
start_station_name char(10)   NOT NULL,
end_station_name char(10)   NOT NULL,
station_telecode char(3)   NOT NULL,
cancel_office_no char(7)   NOT NULL,
cancel_window_no tinyint   NOT NULL,
ahead_time int   NOT Null,  
location_code char(2)   NOT NULL,
office_no char(7)   NOT NULL,
window_no tinyint   NOT NULL,
operater_no char(4)   NOT NULL,
operater_time datetime   NOT NULL,
flag1 char(10)   NOT NULL,
flag2 char(10)   NOT NULL,
running_style tinyint DEFAULT  '1' NOT NULL,
running_rule int DEFAULT  '1' NOT NULL,
seat_type_code char(1) DEFAULT  '*' NOT NULL,
purpose_code char(2) DEFAULT  '*' NOT NULL,
train_type char(1) DEFAULT  '*' NOT NULL,
sale_mode char(1) DEFAULT  '*' NOT NULL,
far_from_station char(3) DEFAULT  '*' NOT NULL,
level_flag int DEFAULT  0 NOT NULL
);
delete from tmp_cancel_limit_define;

CREATE Temporary TABLE If Not Exists tmp_train_group
(
 group_code		 char(20)
 );
delete from tmp_train_group;


Set @d2 = now(),l_today = CURDATE()+0;
if out_in=9 then
select '22===',purpose_code_in;
end if;





Select  relation_code Into l_relation_code FROM basic.DG50_purpose_relate_define 
WHERE inner_code = 'AD' AND start_date <= l_today AND stop_date  >= l_today AND station_telecode = '***' 
AND instr(purpose_code_in,purpose_code) % 2 = 1 AND trim(obligate1) = '1' 
ORDER BY relation_code Limit 1;

set l_error =  @@error_count,l_rowcount = found_rows();



set record_not_found = 0;
if out_in=9 then
	select '23===',l_today,l_relation_code;
end if;
begin 

	DECLARE	purpose_cursor CURSOR FOR
		SELECT  purpose_code FROM basic.DG50_purpose_relate_define
			WHERE inner_code = 'AD' 
			  AND start_date <= l_today
			  AND stop_date  >= l_today
			  AND relation_code = l_relation_code
			  AND trim(obligate1) >= '1'
			 
			  ORDER BY obligate1;
	OPEN purpose_cursor;

	loop_purpose: 
	WHILE 1 = 1 do
		FETCH purpose_cursor INTO t_purpose_code;
		if out_in=9 then
		select '24_1===',t_purpose_code;
		end if;
		if record_not_found = 1 THEN
				leave loop_purpose;
	  end IF;

		IF instr(purpose_code_in,t_purpose_code) % 2 = 0 THEN 
			 set purpose_code_in = concat(purpose_code_in,t_purpose_code);
				
		end if;
		if out_in=9 then
		select '24_2===',t_purpose_code,purpose_code_in;
		end if;
	End While loop_purpose;

	CLOSE purpose_cursor;
end; 
if out_in=9 then
select '20===',purpose_code_in;
end if;




Set l_tmp_purpose = purpose_code_in,l_purpose_list = '';
loop_purpose_list:
WHILE 1 = 1 do
	Set t_purpose_code	= LEFT(ltrim(l_tmp_purpose),2);
	Set l_tmp_purpose		= INSERT(ltrim(l_tmp_purpose),1,2,'  ');

	IF t_purpose_code = '' OR t_purpose_code IS NULL Then
     leave loop_purpose_list;
  End If;
	Set l_purpose_list = concat(rtrim(l_purpose_list),t_purpose_code, ',');

End While loop_purpose_list;

if out_in=9 then
select '21_1==',l_purpose_list,purpose_code_in,l_purpose_list;
end if;

IF instr(l_purpose_list,'00') > 0 AND instr(l_purpose_list,'02') = 0 Then
   Set purpose_code_in = concat(rtrim(purpose_code_in),'02'),l_purpose_list = concat(rtrim(l_purpose_list),'02,');
End If;
if out_in=9 then
select '21_1_1==',l_purpose_list,purpose_code_in,l_purpose_list;
end if;

IF instr(l_purpose_list,'1C') > 0 AND instr(l_purpose_list,'2C') = 0 Then
   set purpose_code_in = concat(rtrim(purpose_code_in),'2C'),l_purpose_list = concat(rtrim(l_purpose_list),'2C,');
End If;
 if out_in=9 then
 select '21_2==',l_purpose_list,purpose_code_in,l_purpose_list;
 end if;

Set l_to_Range = range_in,l_bed_code_list = '3456',l_share_train_flag = 0,l_purpose_code_cache	= purpose_code_in;

IF out_in IN (3,9) Then 
   
   select 'commenting out one row code ,if modify finish please restore 20160120 by liyang';
ELSE 
   IF out_in = 4 Then
      Set out_in = 0 ,l_show_time = 1;
   ELSE 
      Set l_show_time = 0;
   End If;
End If;

SELECT my_center_code Into l_my_center_code FROM center.DG30_my_center;

IF @show_time = 1 then
	SELECT '------------------------------------------------DBG.001.查询所有用途-----------------------------------------------------------------';
	SELECT char_length(trim(purpose_code_in))/2 AS purpose_num,Left(rtrim(purpose_code_in),50) AS purpose_code,Left(rtrim(l_purpose_list),50) AS purpose_list;
END if;


begin
	
	
	
	
	Set @l_sql = concat('INSERT INTO tmp_query_train_info SELECT *,0 FROM ',train_info_in);

	

	prepare stmt_1 from @l_sql;

	EXECUTE stmt_1;

	set l_error =  @@error_count,l_rowcount = row_count();

	drop PREPARE stmt_1;
	
	
	
end ;
set lab1_s = 1;
lab1:loop
if lab1_s = 0 THEN
		leave lab1;
end if;

IF l_rowcount = 0 OR l_error !=0 then 
	
	LEAVE lab1;
end if;
set temp_out = l_rowcount;
  if out_in=9 then 
  select '25===select * from tmp_query_train_info';

  end if;



Select train_date,from_station,to_station Into l_train_date,l_from_station,l_to_station 
FROM tmp_query_train_info Limit 1;
set l_error =  @@error_count,l_rowcount = row_count();
IF l_rowcount = 0 OR l_error !=0 Then
	select '26===leave lab1;';
   LEAVE lab1;
End If;


SELECT min(train_date),max(train_date) Into l_min_train_date,l_max_train_date FROM tmp_query_train_info;


Select bureau_code,subbureau_code,city_code 
Into l_sale_bureau,l_sale_subbureau,l_city_code 
FROM basic.station_dictionary 
WHERE station_telecode = inner_code_in;

set l_error =  @@error_count,l_rowcount = row_count();

IF l_rowcount = 0 OR l_error !=0 Then
   LEAVE lab1;
ELSE 
	
  
		INSERT INTO tmp_union_station 	
			SELECT station_telecode FROM basic.DG50_same_city_dictionary 
				WHERE start_date	<= l_train_date 
				  AND stop_date	>= l_train_date
				  AND city_code	= 	l_city_code
				  AND station_telecode <> inner_code_in
				  AND union_flag	=	'1';
		set l_error =  @@error_count,l_rowcount = row_count();
		IF l_error !=0 Then
       LEAVE lab1;
    End If;
End If;


SELECT bureau_code Into l_board_bureau_code
	FROM basic.station_dictionary
	WHERE station_telecode = l_from_station
	AND start_date  <= l_train_date
	AND stop_date   >= l_train_date;
set l_error =  @@error_count,l_rowcount = row_count();
IF l_rowcount = 0 OR l_error !=0 Then
   LEAVE lab1;
end if; 


Set temp_board_station 	= l_from_station           
	,	temp_end_station 		= l_to_station
	,	temp_board_train_date 	= l_train_date
	,	temp_directions 			= '*' 	
	,	temp_telecode_list 		= 'DS60_ticket_left'
	,	temp_station_train_code = '%'
	,	temp_purposes 			= purpose_code_in		
	,	temp_inner_code 			= inner_code_in	
	,	temp_range 				= range_in 		
	,	temp_flag 					= 0		
	,	temp_seat_type_list 	= '%'
	,	temp_out 					= temp_out
	,	temp_kind 					= concat(sale_mode_in , ':' , trim(CONVERT(temp_out,CHAR)) , ' Rows');




INSERT INTO tmp_query_info SELECT DISTINCT train_no,train_code FROM tmp_query_train_info;
 if out_in=9 then
 	select '31====select * from tmp_query_info';
 	
 end if;

INSERT INTO tmp_stop_time
	SELECT DISTINCT a.start_date ,a.stop_date ,a.train_no ,a.station_name ,a.station_telecode ,a.station_no,
	a.station_train_code ,a.bureau_code ,a.subbureau_code ,a.day_difference ,a.arrive_time ,a.start_time 
 FROM basic.stop_time a,tmp_query_info b 
	WHERE a.train_no = b.train_no;

 if out_in=9 then
  	select '31_1====select * from tmp_stop_time';



 end if;

INSERT INTO tmp_train_dir 
	SELECT DISTINCT a.* FROM basic.train_dir a,tmp_query_info b
	WHERE a.train_code = b.train_code;
	
 if out_in=9 then
  	select '31_1_1====select * from DJ50_train_sale_define',l_board_bureau_code,l_today,sale_mode_in;

	
	


 end if;

INSERT INTO DS60_ticket_left_tmp_train_para_define 
	SELECT * FROM basic.DJ50_train_sale_define 
		 WHERE inner_code   = l_board_bureau_code	
			AND start_date  <= l_today
			AND stop_date   >= l_today
			AND ticket_type NOT IN (3,12)	
			AND flag1 IN ('*',sale_mode_in)
			AND flag2 IN ('*','');

 if out_in=9 then
 	select '31_2====select * from DS60_ticket_left_tmp_train_para_define';

 end if;


INSERT INTO DS60_ticket_left_tmp_train_para_define 
	SELECT * FROM basic.DJ50_train_sale_define 
		 WHERE start_date  <= l_today
			AND stop_date   >= l_today
			AND train_code  IN (SELECT train_code FROM tmp_query_info)
			AND station_telecode = '*'
			AND flag1 IN ('*',sale_mode_in)
			AND flag2 = '1';

 if out_in=9 then
	select '31_3====select * from DS60_ticket_left_tmp_train_para_define';
 	select * from DS60_ticket_left_tmp_train_para_define;
 end if;

UPDATE DS60_ticket_left_tmp_train_para_define SET ahead_time = 0
WHERE inner_code = 'H';







INSERT INTO tmp_center_notice1 SELECT a.* FROM basic.CJ30_center_notice a,tmp_query_info b 
	WHERE a.train_no = b.train_no
	AND a.command_code IN ('S','U','Q','R','V','W','0','1','M') 							
	AND a.command_enable = 0 
	AND a.stop_date  >= date_add(now(),interval -2 day)
	AND ((l_to_station != '%') OR (l_to_station = '%' AND a.station_telecode IN (l_from_station,'*')));








INSERT INTO tmp_cancel_limit_define 
	SELECT a.* FROM basic.DJ50_cancel_limit_define a , tmp_query_train_info b
	WHERE a.inner_code IN (l_from_station,l_board_bureau_code)
	  AND a.start_date <= l_max_train_date				
	  AND a.stop_date  >= l_min_train_date
	  AND	(a.train_code = b.train_code OR a.train_code = '*' OR b.train_code LIKE a.train_code) 	
	  AND	sale_mode	IN (sale_mode_in,'*')																																		
	  AND (a.purpose_code   = '*' OR instr( purpose_code_in,a.purpose_code) % 2  = 1 )																					
	  AND a.cancel_office_no   = '%'
	  AND a.cancel_window_no   = 0;

INSERT INTO tmp_cancel_limit_define
        SELECT a.* FROM basic.DJ50_cancel_limit_define a  , tmp_query_train_info b
        WHERE inner_code IN (SELECT station_telecode FROM tmp_stop_time where station_telecode<>l_from_station) 
          AND a.start_date <= l_max_train_date                          
          AND a.stop_date  >= l_min_train_date
          AND   (a.train_code = b.train_code OR a.train_code = '*' OR b.train_code LIKE a.train_code)   
          AND   sale_mode       IN (sale_mode_in,'*')                                                                                                                                                                                                                                                                           
          AND (a.purpose_code   = '*' OR instr( purpose_code_in,a.purpose_code) % 2  = 1 )                                                                                                                                                                      
          AND a.cancel_office_no   = '%'
          AND a.cancel_window_no   = 0;










set l_t2 = 0
	,	 l_d2 = now()
	,	 l_t3 = 0
	,	 l_t4 = 0
	,	 l_t5 = 0
	,	 l_t6 = 0
	,	 l_t7 = 0
	,	 l_t8 = 0
	,	 l_t9 = 0;


if out_in=9 then
	select '101====select * from tmp_query_train_info';
	 select * from tmp_query_train_info;
end if;
lab_left:
WHILE 1 = 1 do
	if out_in=9 then
		select '101_1 is here';
  end if;
	IF NOT EXISTS(SELECT 1 FROM tmp_query_train_info WHERE flag = 0 ) Then
			 
			
			
       LEAVE lab_left;
  End If;

	set l_d3 = now(),l_cancel_purpose = '';

	
	SELECT train_date,train_no,from_station,to_station,train_code
	into l_train_date,l_train_no,l_from_station,l_to_station,l_train_code
		FROM tmp_query_train_info
		WHERE flag = 0 limit 1;



	UPDATE tmp_query_train_info SET flag = 1
		WHERE train_date 	= l_train_date 
		  AND train_no		= l_train_no
		  AND train_code	= l_train_code
		  AND from_station = l_from_station
		  AND to_station  = l_to_station
		  AND flag = 0;

	
	SELECT min(station_no) 
	into l_min_station_no
		FROM tmp_stop_time
		WHERE train_no = l_train_no;
	set l_error =  @@error_count,l_rowcount = row_count();
	IF l_rowcount = 0 OR l_error !=0 Then
			 if out_in=9 THEN
				select '101_2===is here';
			 end if;
		 Iterate lab_left;
	end if; 

	
	IF l_from_station != '%' THEN	
		SELECT start_time,day_difference,subbureau_code,station_no
			into l_start_time,l_day_difference_from,l_board_subbureau_code,l_from_station_no
			FROM tmp_stop_time 
			WHERE train_no = l_train_no
				AND station_telecode = l_from_station LIMIT 1;

			set l_error =  @@error_count,l_rowcount = row_count();
			IF l_rowcount = 0 OR l_error !=0 Then
					 if out_in=9 THEN
					 		select '101_3===is here';
					 end if;
				 Iterate lab_left;
			end if; 



	ELSE 
		SELECT station_telecode,station_no,start_time,day_difference,subbureau_code
			into l_from_station,l_from_station_no,l_start_time,l_day_difference_from,l_board_subbureau_code
			FROM 	tmp_stop_time
			WHERE train_no = l_train_no
				AND station_telecode = inner_code_in ;
		set l_error =  @@error_count,l_rowcount = row_count();
			IF l_error !=0 Then
					 if out_in=9 THEN
					 	select '101_4===is here';
					 end if;
				 Iterate lab_left;
			end if; 



		IF l_rowcount = 0 then 
			SELECT station_telecode,station_no,start_time,day_difference,subbureau_code
				into l_from_station,l_from_station_no,l_start_time,l_day_difference_from,l_board_subbureau_code
				FROM 	tmp_stop_time
				WHERE train_no = l_train_no
					AND station_telecode IN (SELECT station_telecode FROM tmp_union_station)
				ORDER BY station_no DESC LIMIT 1;
			set l_error =  @@error_count,l_rowcount = row_count();
			IF l_error !=0 Then
					 if out_in=9 THEN
					 	select '101_5===is here';
					 end if;
				 Iterate lab_left;
			end if; 



			IF l_rowcount = 0 THEN
				SELECT station_telecode,station_no,start_time,day_difference,subbureau_code
					into l_from_station,l_from_station_no,l_start_time,l_day_difference_from,l_board_subbureau_code
					FROM 	tmp_stop_time
					WHERE train_no = l_train_no
					  AND	station_no = l_min_station_no LIMIT 1;
				set l_error =  @@error_count,l_rowcount = row_count();
				IF l_rowcount = 0 OR l_error !=0 Then
						 if out_in=9 THEN
						 	select '101_6===is here';
						 end if;
					 Iterate lab_left;
				end if; 



			END if;
		END if;
	End if;






insert into tmp_train_group
select group_code
  from basic.DJ52_train_group_define
 where inner_code = l_board_bureau_code 
   and module_code='J' 
   and type_code='T' 
   and start_station_telecode = l_from_station;
   		







	set l_start_datetime = str_to_date( concat(l_train_date,l_start_time) ,'%Y%m%d%H%i');

	
	IF out_in != 1 THEN	
		IF l_train_date <= l_today THEN
			
			IF timediff( l_start_datetime , NOW()) <= -10 THEN
				
						
						
				 Iterate lab_left;
			end if;
		END if;
	END if;
	
	set l_start_train_date = date_format(date_add(l_train_date, INTERVAL 0 - l_day_difference_from DAY),'%Y%m%d');
if out_in=9 THEN
	select '110=====select * from tmp_stop_time',l_to_station;
	select * from  tmp_stop_time;
end if;	
	
	IF l_to_station != '%' THEN
		SELECT day_difference,station_no
			into l_day_difference_to,l_to_station_no
			FROM 	tmp_stop_time
			WHERE train_no = l_train_no
				AND station_telecode = l_to_station
			ORDER BY station_no  LIMIT 1;
			set l_error =  @@error_count,l_rowcount = row_count();
			IF l_rowcount = 0 OR l_error !=0 Then
				 
						
						
				 Iterate lab_left;
			end if; 
	END if;

	
	SELECT start_station_name,end_station_name,train_type_code,start_date	
		
		,running_style,running_rule,train_class_code
		into l_start_station_name,l_end_station_name,l_train_type,l_start_date,l_running_style,l_running_rule,l_train_class_code
		FROM tmp_train_dir 
			WHERE train_code		= l_train_code
			  AND	subbureau_code	= substring(l_train_no,1,2)
			  AND	double_id		= substring(l_train_no,11,1)
			  AND schema_id		= substring(l_train_no,12,1);
		set l_error =  @@error_count,l_rowcount = row_count();
		IF l_rowcount = 0 OR l_error !=0 Then
				
						
						
						
			 Iterate lab_left;
		end if; 

	
	IF l_running_style != 1 THEN
		SET l_date_after = datediff(l_train_date,l_start_date) - l_day_difference_from ;
		SET l_date_after = l_date_after % l_running_style ;
		IF l_running_rule & power(2,l_date_after) = 0 THEN
			
					
						
			 Iterate lab_left;
		end if; 
	END	if;

	
	set l_train_code = l_train_no;
	if out_in=9 then
		select 'call arith.CS50_Get_Train_Parameter',l_train_code,l_start_station_telecode,l_end_station_telecode;
	end if;
	CALL arith.CS50_Get_Train_Parameter(l_train_code,	l_start_station_telecode,	l_end_station_telecode,NULL) ;
	if out_in=9 then
 		 select 'end call arith.CS50_Get_Train_Parameter';
	end if;



	
	IF l_sale_bureau != l_board_bureau_code then 
		 set l_From_Range = 4;
	ELSEIF l_sale_subbureau != l_board_subbureau_code THEN 
     set l_From_Range = 3;
	ELSEIF inner_code_in != l_from_station THEN
		if out_in=9 then
			select 'call arith.CS50_Same_City',l_train_date,inner_code_in,l_from_station,'1',return_out;
		end if;
		CALL arith.CS50_Same_City(l_train_date,inner_code_in,l_from_station,'1',return_out);	
		if out_in=9 then
			select 'end call arith.CS50_Same_City',l_train_date,inner_code_in,l_from_station,'1',return_out;
		end if;
		IF return_out = 1 THEN 
			 set l_From_Range = 1;														
		ELSE 
			 set l_From_Range = 2;
		end if;
	ELSE 
		set l_From_Range = 0;
	end if;



	
	SELECT inner_code into l_start_bureau_code
		FROM basic.DG50_train_admin_auth
			WHERE train_code				  = l_train_code
			  AND start_station_telecode = l_start_station_telecode
			  AND end_station_telecode	  = l_end_station_telecode
			  AND station_telecode		  = l_from_station;
	set l_error =  @@error_count,l_rowcount = row_count();
	IF l_rowcount = 0 then 
		 set l_start_bureau_code = l_board_bureau_code;
  end if;
	
	
	IF l_my_center_code = 'AD' THEN
		
		IF l_sale_bureau != l_board_bureau_code THEN
				
						
						
			 Iterate lab_left;
		end if;
	END if;



	IF l_show_time = 1 THEN
		select  '------------------------------------------------DBG.010.查询参数-----------------------------------------------------------------';
		SELECT l_train_date AS train_date,l_train_no AS train_no,l_from_station AS from_station,l_to_station AS to_station,l_train_code AS train_code
			,	l_start_bureau_code AS start_bureau_code,l_From_Range AS From_Range;
	END if;
	
	delete from  tmp_center_notice;
	INSERT INTO tmp_center_notice SELECT * FROM tmp_center_notice1 WHERE train_no = l_train_no;
	IF row_count() = 0 THEN
		 SET l_center_notice = '';
	ELSE 
		 set l_center_notice = 'tmp_center_notice';
	end if;



	
	IF l_center_notice = 'tmp_center_notice' THEN 
		SELECT command_code into l_command_code
			FROM 	tmp_center_notice 
			 WHERE	train_no = l_train_no
				AND	station_telecode = l_from_station
				AND	command_code IN ('Q','R') 
				AND	start_date			<= l_train_date
				AND	stop_date 			>= l_train_date
				AND	running_rule & (power(2,datediff(l_train_date,start_date) % running_style)) > 0 
			ORDER BY operate_time DESC LIMIT 1;
		set l_error =  @@error_count,l_rowcount = row_count();
		IF l_error != 0 THEN 
			
						
						
			 Iterate lab_left;
		end if;
		IF l_rowcount >= 1 AND l_command_code = 'Q' THEN
			
			 Iterate lab_left;
		end if;

		
		SELECT command_code into l_command_code
			FROM 	tmp_center_notice 
			 WHERE	train_no = l_train_no
				AND	command_code IN ('0','1') 
				AND	start_date			<= l_start_train_date
				AND	stop_date 			>= l_start_train_date
				AND	running_rule & (power(2,datediff(l_start_train_date,start_date) % running_style)) > 0 
			ORDER BY operate_time DESC limit 1;
		set l_error =  @@error_count,l_rowcount = row_count();
		IF l_error != 0 THEN 
			 Iterate lab_left;
		end if;
		IF l_rowcount >= 1 AND l_command_code = '0'  THEN
			 Iterate lab_left;
		end if;
		

		
		IF l_to_station != '%' THEN
			set l_arrive_date = date_format(Date_add(l_train_date,INTERVAL l_day_difference_to - l_day_difference_from DAY),'%Y%m%d');
			SELECT command_code into l_command_code
				FROM 	tmp_center_notice 
				 WHERE	train_no = l_train_no
					AND	station_telecode = l_to_station
					AND	command_code 	 IN ('Q','R') 
					AND	start_date		 <= l_arrive_date
					AND	stop_date 		 >= l_arrive_date
					AND	running_rule & (power(2,datediff(l_arrive_date,start_date) % running_style)) > 0 
				ORDER BY operate_time DESC LIMIT 1;
			set l_error =  @@error_count,l_rowcount = row_count();
			IF l_error != 0 THEN 
				 Iterate lab_left;
			end if;
			IF l_rowcount >= 1 AND l_command_code = 'Q' THEN
				 Iterate lab_left;
			end if;

			SELECT command_code into l_command_code
				FROM 	tmp_center_notice 
				 WHERE	train_no = l_train_no
					AND	station_telecode = l_to_station
					AND	command_code 	 IN ('V','W') 
					AND	start_date		 <= l_arrive_date
					AND	stop_date 		 >= l_arrive_date
					AND	running_rule & (power(2,datediff(l_arrive_date,start_date) % running_style)) > 0 
				ORDER BY operate_time DESC LIMIT 1;
			set l_error =  @@error_count,l_rowcount = row_count();
			IF l_error != 0 THEN 
				 Iterate lab_left;
			end if;
			IF l_rowcount >= 1 AND l_command_code = 'V' THEN
				 Iterate lab_left;
			end if;


			
			SELECT command_code into l_command_code
				FROM 	basic.CJ30_center_notice 
				 WHERE	inner_code			= l_start_bureau_code				
					AND	train_no			  IN (l_train_no,'*')
					AND	station_telecode IN (l_from_station,'*')			
					AND	station_name	  IN (l_to_station,'*')				
					AND	command_code 		= 'M'  								
					AND	start_date			<= l_start_train_date				
					AND	stop_date 			>= l_start_train_date
					AND	running_rule & (power(2,datediff(l_start_train_date,start_date) % running_style)) > 0 
				   AND 	command_enable		 = 0
				ORDER BY operate_time DESC limit 1;
			set l_error =  @@error_count,l_rowcount = row_count();
			IF l_error != 0 THEN 
				 Iterate lab_left;
			end if;
			IF l_rowcount >= 1 AND l_command_code = 'M' THEN
				 Iterate lab_left;
			end if;

			SELECT command_code into l_command_code
				FROM 	basic.CJ30_center_notice 
				 WHERE	inner_code			= l_start_train_date							
					AND	l_train_code			LIKE train_no									
					AND	station_telecode  = '*'												
					AND	station_name	   = '*'												
					AND	command_code 		= 'M'  											
					AND	start_date			<= l_start_train_date							
					AND	stop_date 			>= l_start_train_date
					AND	running_rule & (power(2,datediff(l_start_train_date,start_date) % running_style)) > 0 
				   AND 	command_enable		 = 0
				ORDER BY operate_time DESC LIMIT 1;
			set l_error =  @@error_count,l_rowcount = row_count();
			IF l_error != 0 THEN 
				 Iterate lab_left;
			end if;
			IF l_rowcount >= 1 AND l_command_code = 'M' THEN
				 Iterate lab_left;
			end if;

			SELECT command_code into l_command_code
				FROM 	basic.CJ30_center_notice 
				 WHERE	train_no				= '*'
					AND	station_telecode 	= l_from_station
					AND	command_code 		= 'Z'  
					AND	start_date			<= l_train_date				
					AND	stop_date 			>= l_train_date
					AND	running_rule & (power(2,datediff(l_train_date,start_date) % running_style)) > 0 
				   AND 	command_enable		 = 0
				ORDER BY operate_time DESC LIMIT 1;
			set l_error =  @@error_count,l_rowcount = row_count();
			IF l_error != 0 THEN 
				 Iterate lab_left;
			end if;
			IF l_rowcount >= 1 AND l_command_code = 'Z' THEN
				 Iterate lab_left;
			end if;

		END if;
		IF EXISTS(SELECT 1 FROM tmp_center_notice WHERE command_code IN ('S','U')) THEN		
			DELETE FROM tmp_center_notice WHERE command_code NOT IN ('S','U');
		ELSE
			set l_center_notice = '';
		end if;
	END if;

	IF l_show_time = 1 THEN
		select  '------------------------------------------------DBG.020.指定车次查询用途-----------------------------------------------------------------';
		SELECT l_train_date AS train_date,l_train_no AS train_no,l_from_station AS from_station,l_to_station AS to_station,l_train_code AS train_code
			,	l_purpose_code_cache AS purpose_code_cache,l_purpose_list AS purpose_list;
	END if;
	
	
	set l_tmp_purpose = l_purpose_code_cache
		,	 l_purpose_cache = '';
	lab_control_day:
	WHILE NOT (l_tmp_purpose IS NULL OR l_tmp_purpose = '') DO
		set purpose_code_in = substring(l_tmp_purpose,1,2);
		set l_tmp_purpose  = ltrim(INSERT(l_tmp_purpose,1,2,''));



		
		set l_train_period = 0;			

		
		
		SELECT control_day
			,	 lpad(ahead_time,4,'0')
			,	 control_train_day,
				from_period,
			  control_min_date,
			  start_date	
			,	purpose_code				
		 into l_max_day,tmp_start_time,l_stop_date,C_from_period,C_control_min_date,C_start_date,t_purpose_code
		 FROM DS60_ticket_left_tmp_train_para_define
		 WHERE inner_code 		= l_start_bureau_code
		  AND  train_code			= l_train_code AND start_station_name = l_start_station_name AND end_station_name = l_end_station_name
		  AND	(station_telecode  in (l_from_station,'*')  and  group_code = '*'  
	    		or                                                                 
	    		station_telecode = '*'  and group_code in ( select group_code from tmp_train_group)) 
		  AND train_type 		  IN (l_train_type,'*')
		  AND purpose_code	  IN (purpose_code_in,'*')
		  AND flag1 			  IN (sale_mode_in,'*')			
		  AND flag2				   = '1'								
	
	


		
		
		
			AND (train_class = l_train_class_code OR train_class = "*")
		  ORDER BY level_flag  ,train_code ,station_telecode ,group_code,ticket_type,purpose_code,table_range,seat_type_code,train_type,train_class,flag1;


		set l_error =  @@error_count,l_rowcount = row_count();
		IF l_rowcount = 0 AND l_error = 0 THEN
			
			SELECT control_day
				,	 lpad(ahead_time,4,'0')
				,	 control_train_day,
					from_period,
			    control_min_date,
			    start_date	
				,	purpose_code				
			 into l_max_day,tmp_start_time,l_stop_date,C_from_period,C_control_min_date,C_start_date,t_purpose_code
			 FROM DS60_ticket_left_tmp_train_para_define
			 WHERE inner_code = l_board_bureau_code
			  				  AND	(station_telecode  in (l_from_station,'*')  and  group_code = '*'  
				      or                                                                  
				      station_telecode = '*'  and group_code in ( select group_code from tmp_train_group)) 
			  AND train_type 		  IN (l_train_type,'*')
			  AND (train_code 	  IN (l_train_code,'*') OR (train_code != l_train_code AND l_train_code LIKE train_code) )
			  AND purpose_code	  IN (purpose_code_in,'*')		
			  AND flag1 			  IN (sale_mode_in,'*')			
			  AND flag2				  IN ('*','')						
		
		

		
		
			
				AND (train_class = l_train_class_code OR train_class = "*")
			  ORDER BY level_flag  ,train_code ,station_telecode ,group_code,ticket_type,purpose_code,table_range ,seat_type_code,train_type,train_class,flag1 LIMIT 1;


			set l_error =  @@error_count,l_rowcount = row_count();
		END if;



		IF l_show_time = 1 THEN
			select  '------------------------------------------------DBG.021.根据用途查询预售期.20150114.zzq-----------------------------------------------------------------';
			SELECT left(purpose_code_in,6) AS '查询用途',t_purpose_code AS '定义的用途',l_rowcount AS '查到的条数',l_max_day AS '预售期天数',tmp_start_time AS '起售时间',l_stop_date '截止时间';		
			SELECT flag2 AS '是否管理管理(1-是,其他-否)',purpose_code,control_day,control_train_day,DS60_ticket_left_tmp_train_para_define.* FROM DS60_ticket_left_tmp_train_para_define
			 WHERE inner_code = l_board_bureau_code
			  				  AND	(station_telecode  in (l_from_station,'*')  and  group_code = '*'  
				      or                                                                  
				      station_telecode = '*'  and group_code in ( select group_code from tmp_train_group)) 
			  AND train_type 		  IN (l_train_type,'*')
			  AND (train_code 	  IN (l_train_code,'*') OR (train_code != @train_code AND @train_code LIKE train_code) )
			  AND purpose_code	  IN (purpose_code_in,'*')		
			  AND flag1 			  IN (sale_mode_in,'*')			
				AND (train_class = l_train_class_code OR train_class = "*")
			  ORDER BY level_flag  ,train_code ,station_telecode ,group_code,ticket_type,purpose_code,table_range ,seat_type_code,train_type,train_class,flag1;
		END if;

		IF l_rowcount > 0 THEN
			SET C_train_period = 0;
			
			SET l_date_after = timestampdiff(day,now(),l_train_date);
			IF l_date_after = l_max_day THEN
					SET tmp_start_datetime = str_to_date( concat(CURDATE(),tmp_start_time),'%Y-%m-%d%H%i' );
					IF (timediff( tmp_start_datetime, now()) < 0) THEN   
						SET l_max_day = l_max_day - 1	; 
					END if;
			END if;
			
			IF l_date_after > l_max_day THEN 
				 set l_train_period = 1;	
			end if;
			IF l_train_date > l_stop_date then
				 set l_train_period = 1;
			end if;




			SET l_now_datetime = DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%s');
			SET l_start_datetime = str_to_date( concat(CURDATE() ,tmp_start_time),'%Y-%m-%d%H%i');
			
			if C_start_date = l_today and tmp_start_time <> "0000" THEN
				IF timediff(l_now_datetime,l_start_datetime) < 0 and l_train_date > C_control_min_date THEN 	
					 
					 set l_max_day = timestampdiff(day,now(),C_control_min_date);
				end if;
				if l_date_after > l_max_day then
					 Set C_train_period = 1;
				end if;
			END if;




	
			
			IF l_train_period = 1 or C_train_period = 1 THEN 
				 set purpose_code_in = '';	
			end if;
		END if;
		set l_purpose_cache = concat(rtrim(l_purpose_cache) , purpose_code_in , ',');



		
		
		
		IF l_to_station  <> '%' then 
			SELECT ahead_time into l_ahead_time FROM tmp_cancel_limit_define
			 WHERE inner_code IN (l_board_bureau_code,l_from_station)																								
				 and (train_code = l_train_code AND start_station_name = l_start_station_name AND end_station_name = l_end_station_name OR train_code = '*' OR train_code != l_train_code AND l_train_code LIKE train_code) 
				 AND  station_telecode IN (l_from_station,'*')
				 AND  train_type IN ('*',l_train_type)																																
				 AND 	purpose_code   IN ('*',purpose_code_in )																												
				 AND	start_date	<= l_train_date						
				 AND	stop_date	>= l_train_date
				 AND 	sale_mode   IN ('*',sale_mode_in )
				 AND	running_rule & (power(2,datediff(l_train_date,start_date) % running_style)) > 0 
			 ORDER BY level_flag ,purpose_code desc,train_code desc,station_telecode desc ,train_type desc,sale_mode desc	,ahead_time desc LIMIT 1; 
			set l_error =  @@error_count,l_rowcount = row_count();
			IF l_error != 0 THEN 
				 Iterate lab_left;
			end if;
			IF l_rowcount = 0 then 
				 set l_ahead_time = 0;
			end if;

			
			IF time_to_sec(timediff( l_start_datetime,now() ))/60 <= l_ahead_time THEN 
				 set l_cancel_purpose = concat(l_cancel_purpose , purpose_code_in);						
			END if;
		END if;

		IF l_to_station  = '%' THEN
			 set l_to_station_no = l_from_station_no,l_to_station_no_limit = '99';
		ELSE 
			 set l_to_station_no_limit = l_to_station_no;			
		end if;



	END while lab_control_day;
	set purpose_code_in = l_purpose_cache;



	IF l_show_time = 1 THEN
		select '------------------------------------------------DBG.020.指定车次可用的查询用途-----------------------------------------------------------------';
		SELECT purpose_code_in AS purpose_code,l_purpose_list AS purpose_list;
	END if;

	
	set l_d4 = now();
	set l_t3 = l_t3 ;

	
	
	
	set l_start_date = l_start_train_date;





	WHILE l_start_date <= l_train_date DO 
	
		 if out_in=9 then 
			select '51====',l_train_no,l_start_date,l_from_station_no,l_to_station_no,l_From_Range,l_To_Range,purpose_code_in;
			SELECT sql_no_cache a.train_no,a.train_date,a.station_no,a.assign_station,a.far_from_station_no,a.limit_station,a.coach_no,a.seat_type_code,a.purpose_code
			,a.range,a.ticket_quantity,a.up_quantity,a.mid_quantity,a.down_quantity,a.wseat_type_code,a.seat_feature,a.inner_code,a.ticket_source
				FROM center.left_base_center a
				WHERE  a.train_no 	  = l_train_no
					AND a.train_date 	  = l_start_date
					AND a.station_no 	 <= l_from_station_no
					AND a.limit_station>= l_to_station_no
					AND a.range 		 >= l_From_Range
					AND a.range 		 <= l_To_Range
					AND instr(purpose_code_in,a.purpose_code) > 0
					AND a.ticket_quantity > 0
					AND a.station_no  < a.limit_station	
				UNION ALL
				SELECT a.train_no,a.train_date,a.station_no,a.assign_station,a.far_from_station_no,a.limit_station,a.coach_no,a.seat_type_code,a.purpose_code
						,a.range,a.ticket_quantity,a.up_quantity,a.mid_quantity,a.down_quantity,a.wseat_type_code,a.seat_feature,a.inner_code,a.ticket_source
				FROM center.left_base_AD a
				WHERE  a.train_no 	  = l_train_no
					AND a.train_date 	  = l_start_date
					AND a.station_no 	 <= l_from_station_no	
					AND a.limit_station>= l_to_station_no
					AND a.range 		 >= l_From_Range
					AND a.range 		 <= l_To_Range
					AND instr(purpose_code_in,a.purpose_code) > 0
					AND a.ticket_quantity > 0
					AND a.station_no  < a.limit_station;
		 end if;
		
		IF screen_flag_in = 0 THEN 
				
			set record_not_found = 0;
			begin 
				DECLARE cursor_get_left CURSOR FOR 
				SELECT sql_no_cache a.train_no,a.train_date,a.station_no,a.assign_station,a.far_from_station_no,a.limit_station,a.coach_no,a.seat_type_code,a.purpose_code
						,a.range,a.ticket_quantity,a.up_quantity,a.mid_quantity,a.down_quantity,a.wseat_type_code,a.seat_feature,a.inner_code,a.ticket_source
				FROM center.left_base_center a
				WHERE  a.train_no 	  = l_train_no
					AND a.train_date 	  = l_start_date
					AND a.station_no 	 <= l_from_station_no
					AND a.limit_station>= l_to_station_no
					AND a.range 		 >= l_From_Range
					AND a.range 		 <= l_To_Range
					AND instr(purpose_code_in,a.purpose_code) > 0
					AND a.ticket_quantity > 0
					AND a.station_no  < a.limit_station	
				UNION ALL
				SELECT a.train_no,a.train_date,a.station_no,a.assign_station,a.far_from_station_no,a.limit_station,a.coach_no,a.seat_type_code,a.purpose_code
						,a.range,a.ticket_quantity,a.up_quantity,a.mid_quantity,a.down_quantity,a.wseat_type_code,a.seat_feature,a.inner_code,a.ticket_source
				FROM center.left_base_AD a
				WHERE  a.train_no 	  = l_train_no
					AND a.train_date 	  = l_start_date
					AND a.station_no 	 <= l_from_station_no	
					AND a.limit_station>= l_to_station_no
					AND a.range 		 >= l_From_Range
					AND a.range 		 <= l_To_Range
					AND instr(purpose_code_in,a.purpose_code) > 0
					AND a.ticket_quantity > 0
					AND a.station_no  < a.limit_station;	

				OPEN cursor_get_left;

				lab_get_left:
				WHILE 1 = 1 DO 
					FETCH cursor_get_left INTO
						t_train_no ,
						t_train_date ,
						t_station_no, 
						t_assign_station,
						t_far_from_station_no,
						t_limit_station,
						t_coach_no	,
						t_seat_type_code ,
						t_purpose_code ,
						t_range ,
						t_ticket_quantity ,
						t_up_quantity ,
						t_mid_quantity ,
						t_down_quantity ,
						t_wseat_type_code,	
						t_seat_feature,
						t_inner_code,
						t_ticket_source;
				
					if record_not_found = 1 THEN
							
							
							
							leave lab_get_left;
					end IF;
							
					INSERT INTO tmp_left_base VALUES
						(
							t_assign_station,
							t_train_no ,
							t_train_date ,
							t_station_no, 
							t_far_from_station_no,
							t_limit_station,
							t_coach_no	,
							t_seat_type_code ,
							t_purpose_code ,
							t_ticket_quantity ,
							t_up_quantity ,
							t_mid_quantity ,
							t_down_quantity ,
							t_ticket_source,
							t_range ,
							t_inner_code,
							t_wseat_type_code,	
							t_seat_feature
						);
				END while lab_get_left;
				CLOSE cursor_get_left;
			end;
		ELSE	





			INSERT INTO  tmp_left_base(assign_station,train_no,train_date,station_no,far_from_station_no,limit_station,coach_no,seat_type_code,
																purpose_code,ticket_quantity,up_quantity,mid_quantity,down_quantity,ticket_source,table_range,inner_code,
																wseat_type_code,seat_feature) 
				SELECT sql_no_cache a.assign_station,a.train_no,a.train_date,a.station_no,a.far_from_station_no,a.limit_station,a.coach_no,a.seat_type_code,a.purpose_code
						,a.ticket_quantity,a.up_quantity,a.mid_quantity,a.down_quantity,a.ticket_source,a.range as table_range,a.inner_code,a.wseat_type_code,a.seat_feature
				FROM center.left_base_center a
				WHERE  a.train_no 	  = l_train_no
					AND a.train_date 	  = l_start_date
					AND a.station_no 	 <= l_from_station_no
					AND a.limit_station>= l_to_station_no
					AND a.range 		 >= l_From_Range
					AND a.range 		 <= l_To_Range
					AND instr(purpose_code_in,a.purpose_code) > 0
					AND a.ticket_quantity > 0
					AND a.station_no  < a.limit_station	
				UNION 
				SELECT  a.assign_station,a.train_no,a.train_date,a.station_no,a.far_from_station_no,a.limit_station,a.coach_no,a.seat_type_code,a.purpose_code
						,a.ticket_quantity,a.up_quantity,a.mid_quantity,a.down_quantity,a.ticket_source,a.range,a.inner_code,a.wseat_type_code,a.seat_feature
				FROM center.left_base_AD a
				WHERE  a.train_no 	  = l_train_no
					AND a.train_date 	  = l_start_date
					AND a.station_no 	 <= l_from_station_no	
					AND a.limit_station>= l_to_station_no
					AND a.range 		 >= l_From_Range
					AND a.range 		 <= l_To_Range
					AND instr(purpose_code_in,a.purpose_code) > 0
					AND a.ticket_quantity > 0
					AND a.station_no  < a.limit_station;  

		END if;
	
		set l_start_date = date_format(Date_add(l_start_date,interval 1 day),'%Y%m%d');
	END while;
	
	
	  if out_in=9 then
		select '52=====select * from tmp_left_base;';
		select * from tmp_left_base order by assign_station,train_no,train_date,station_no,far_from_station_no,limit_station,coach_no,seat_type_code,purpose_code,ticket_quantity;
	  end if;

	
	set l_t4 = l_t4;
	
	IF NOT EXISTS(SELECT 1 FROM tmp_left_base) THEN 
		 ITERATE lab_left;
	end if;
	set l_d5 = now();

	

	
	
	set l_cancel_purpose = trim(l_cancel_purpose);
	 if out_in=9 then
		select '54===',l_train_date,l_train_no,l_from_station,l_to_station_no,l_to_station_no_limit,purpose_code_in,l_cancel_purpose,l_From_Range,l_To_Range;
		select * from tmp_left_base;
		
		select '54===查询完毕';
		select '54_1===select * from tmp_left_base_center';
        select * from tmp_left_base_center;
	 end if;
	 INSERT INTO tmp_left_base_center 
	SELECT * FROM tmp_left_base 
		WHERE train_date		= l_train_date
 		  AND train_no			= l_train_no
		  AND assign_station = l_from_station
		  AND limit_station >= l_to_station_no
		  AND (far_from_station_no <= l_to_station_no_limit AND instr( l_cancel_purpose,purpose_code) % 2 = 0 or far_from_station_no <= '99' AND instr( l_cancel_purpose,purpose_code) % 2 = 1 ) 
		  AND instr( purpose_code_in,purpose_code ) > 0 
			
		  AND table_range >= l_From_Range
		  AND table_range <= l_To_Range
		  AND ticket_quantity >  0;
	
		  	
	set l_error =  @@error_count,l_rowcount = row_count();
	IF l_error != 0 THEN
		 ITERATE lab_left;
	end if;
	
	IF l_to_station != '%' AND l_to_station_no_limit = '99' then 
		UPDATE tmp_left_base_center 
			SET far_from_station_no = l_from_station_no;
	END if;
	if out_in=9 then 
		select '53===select * from tmp_left_base_center';
		select * from tmp_left_base_center;
	end if;

	set l_d6 = now();
	
	set l_t5 = l_t5;

	IF l_show_time = 1 then
		SELECT '------------------------------------------------DBG.030.指定车次本站余票信息-----------------------------------------------------------------';
		SELECT * FROM tmp_left_base_center;
	END if;



	
	IF flag_in = 0 AND l_from_station_no > l_min_station_no THEN	
			SET l_transform_date 	 = l_train_date
				,	 l_transform_no 	 = l_from_station_no
				,	 range_in 				 = l_From_Range		
				,	 l_fetch_w_seat 	 = 0
				,	 l_seat_type_code 	 = '%'
				,	 l_share_flag 		 = '0'	
				,	 l_share_string 	 = '';



		
			  if out_in=9 then
				select '61=====call arith.DS50_Proc_Share_Pre',l_transform_date,l_train_no,l_from_station,l_seat_type_code,l_purpose_code_cache,
							range_in,l_share_string,out_in,sale_mode_in,l_show_time,l_return_code;
			  end if;
			
			CALL arith.DS50_Proc_Share_Pre (l_transform_date ,l_train_no
			 , l_from_station, l_seat_type_code
			 , l_purpose_code_cache, range_in ,l_share_string 
			 , 0,sale_mode_in 
			 , l_show_time,l_return_code); 
			 if out_in=9 then
				select '61====end call arith.DS50_Proc_Share_Pre',l_transform_date,l_train_no,l_from_station,l_seat_type_code,l_purpose_code_cache,
							range_in,l_share_string,out_in,sale_mode_in,l_show_time,l_return_code;
			 end if;
			IF trim(l_share_string) IS NULL OR l_share_string = '' THEN
					SET l_share_flag = '0';
			ELSE 
					set l_share_flag = '1';
			end if;

			IF l_show_time = 1 THEN
			 SELECT '########################DBG.040.共用定义查询################################-';
			 SELECT train_date = l_transform_date,train_no = l_train_no,from_telecode = l_from_station,seat_type_code = l_seat_type_code
				, purpose_code = l_purpose_code_cache,table_range = range_in;
			 SELECT '共用定义结果:' = concat('站码[3]日期[8]站序[2]无座席[1]范围[1]始车厢[2]止车厢[2]例外车厢[2]自动共用标记[1][1][1]用途[2]席别[1]' , char(10) , l_share_string);
			END if;

			IF l_share_flag = '1' THEN
				 
				 
				 
				 SELECT special_flag into l_train_type_code
					FROM basic.CG52_train_dir_appendix
					 WHERE train_no = l_train_no;
				 set l_error =  @@error_count,l_rowcount = row_count(); 

				 set l_row = 0 ,l_to_station_no_limit = l_to_station_no;
				 IF l_to_station = '%' THEN 
						set l_to_station_no_limit = '99';     
				 end if;
				
				 delete from tmp_left_center;
				if out_in=9 then
					select '55=========';
				end if;
				 lab2:
				 WHILE l_row < char_length(rtrim(l_share_string)) / 27  DO
						
						
						set  l_original_station_telecode = substring(l_share_string,l_row * 27 + 1,3);
						set  l_transform_date      = substring(l_share_string,l_row * 27 + 1 + 3, 8);
						set  l_transform_no      = substring(l_share_string,l_row * 27 + 1 + 3 + 8, 2);
						set  l_fetch_w_seat      = CONVERT(substring(l_share_string,l_row * 27 + 1 + 3 + 8 + 2, 1),signed);
						set  l_tmp_range       = substring(l_share_string,l_row * 27 + 1 + 3 + 8 + 2 + 1, 1);
						set  l_tmp_start_coach_no    = substring(l_share_string,l_row * 27 + 1 + 3 + 8 + 2 + 1 + 1, 2);
						set  l_tmp_end_coach_no    = substring(l_share_string,l_row * 27 + 1 + 3 + 8 + 2 + 1 + 1 + 2, 2);
						set  l_schedule_coach     = substring(l_share_string,l_row * 27 + 1 + 3 + 8 + 2 + 1 + 1 + 2 + 2, 2); 
						set  l_auto_share      = substring(l_share_string,l_row * 27 + 1 + 3 + 8 + 2 + 1 + 1 + 2 + 2 + 4, 1);    
						set  l_tmp_purpose      = substring(l_share_string,l_row * 27 + 1 + 3 + 8 + 2 + 1 + 1 + 2 + 2 + 5, 2);
						set  l_seat_type_code     = substring(l_share_string,l_row * 27 + 1 + 3 + 8 + 2 + 1 + 1 + 2 + 2 + 7, 1);
						
						IF l_seat_type_code = 'z' THEN set  l_seat_type_code = '%'; end if;
						IF l_tmp_purpose  = '**' then set  l_tmp_purpose  = l_purpose_code_cache; end if;
						set  l_cancel_purpose = '';

						
						IF l_original_station_telecode <> l_from_station THEN
							 

							 
							 IF NOT EXISTS(SELECT  1 FROM tmp_left_base 
								 WHERE train_date   = l_transform_date 
									 AND train_no   = l_train_no 
									 AND assign_station = l_original_station_telecode) then 
									set  l_row = l_row + 1;
									ITERATE lab2;
							 end if;
							 
							 SELECT bureau_code,start_time
								into l_original_bureau_code,l_start_time
								FROM tmp_stop_time 
								WHERE train_no  = l_train_no 
									AND station_no  = l_transform_no; 
												 
							 set  l_purpose_cache = '';
							 
							
						   
							  
							  delete from tmp_train_group;
							 
							 insert into tmp_train_group
							 select group_code
								 from basic.DJ52_train_group_define
								where inner_code = l_original_bureau_code 
									and module_code='J' 
									and type_code='T' 
									and start_station_telecode = l_original_station_telecode;
								
							   
							 lab_while_001:
							 WHILE NOT (l_tmp_purpose IS NULL OR l_tmp_purpose = '') DO
									
									set  purpose_code_in = substring(l_tmp_purpose,1,2);           
									set  l_tmp_purpose  = Insert(l_tmp_purpose,1,2,null);
								
									
									set  l_train_period = 0;   
									
									
									 
									SELECT control_day
									 ,  lpad(ahead_time,4,'0')
									 ,  control_train_day,from_period,control_min_date,start_date    
									 
									 into l_max_day,tmp_start_time,l_stop_date,C_from_period,C_control_min_date,C_start_date
									 FROM DS60_ticket_left_tmp_train_para_define a
									 WHERE inner_code   = l_start_bureau_code
										AND  train_code   = l_train_code AND start_station_name = l_start_station_name AND end_station_name = l_end_station_name
										 AND (station_telecode  in (l_original_station_telecode,'*')  and  group_code = '*'  
												or                                                                  
												station_telecode = '*'  and group_code in ( select group_code from tmp_train_group)) 
										AND train_type     IN (l_train_type,'*')
										AND purpose_code   IN (purpose_code_in,'*')
										AND flag1      IN (sale_mode_in,'*')   
										AND flag2       = '1'        
								 
										

						
									 
									 AND (l_seat_type_code != '%' AND seat_type_code   IN (l_seat_type_code,'*') OR l_seat_type_code = '%')
									 
									ORDER BY level_flag  ,train_code ,station_telecode ,group_code,ticket_type,purpose_code,a.table_range,seat_type_code,train_type,train_class,flag1;
									
						
									set l_error =  @@error_count,l_rowcount = row_count();
									IF l_rowcount = 0 AND l_error = 0 THEN
											
											SELECT  control_day
											 ,  lpad(ahead_time,4,'0')
											 ,  control_train_day,
												from_period,
													 control_min_date,
													 start_date
											 into l_max_day,tmp_start_time,l_stop_date,C_from_period,C_control_min_date,C_start_date
											 FROM DS60_ticket_left_tmp_train_para_define a
											 WHERE inner_code = l_board_bureau_code
												 AND (station_telecode  in (l_original_station_telecode,'*')  and  group_code = '*'  
														or                                                                  
														station_telecode = '*'  and group_code in ( select group_code from tmp_train_group)) 
												AND train_type     IN (l_train_type,'*')
												AND (train_code    IN (l_train_code,'*') OR (train_code != l_train_code AND l_train_code LIKE train_code) )
												AND purpose_code   IN (purpose_code_in,'*')  
												AND flag1      IN (sale_mode_in,'*')   
												AND flag2      IN ('*','')      
										 
												
							
											
											AND (l_seat_type_code != '%' AND seat_type_code   IN (l_seat_type_code,'*') OR l_seat_type_code = '%')
											 
											ORDER BY level_flag desc ,train_code desc ,station_telecode desc,group_code desc,ticket_type desc,purpose_code desc,a.table_range desc,seat_type_code desc,train_type desc,train_class desc,flag1 desc limit 1;
											
							
											set l_error =  @@error_count,l_rowcount = row_count();
									END if;
									
									IF l_rowcount > 0  then
										 set  C_train_period = 0;
										 
										 set  l_date_after = timestampdiff(day,now(),l_transform_date);
										 IF l_date_after = l_max_day THEN
												 set  tmp_start_datetime = str_to_date( concat(CURDATE() , tmp_start_time),'%Y-%m-%d%H%i' );
												 IF (timestampdiff(minute, tmp_start_datetime,now()) < 0) THEN 
														 
														 set  l_max_day = l_max_day - 1; 
												 END if;
										 END if;
										 IF l_date_after > l_max_day  THEN set  l_train_period = 1; end if;
										 IF l_transform_date > l_stop_date THEN set  l_train_period = 1; end if;

										 
										 set  l_now_datetime = date_format(now(),'%Y/%m/%d %H:%i:%s');
										 set  l_start_datetime = str_to_date( concat(CURDATE() , tmp_start_time) ,'%Y-%m-%d%H%i');
										 
										 if C_start_date = l_today and tmp_start_time <> "0000" THEN
												IF timestampdiff( second,l_start_datetime,l_now_datetime) < 0 and l_train_date > C_control_min_date THEN  
														
														set  l_max_day = timestampdiff(day,now(),C_control_min_date);
												end if;
												if l_date_after > l_max_day THEN
														set  C_train_period = 1;
												end if;
										 END if;


									
											
											IF l_train_period = 1 or C_train_period = 1 THEN 
													set  purpose_code_in = ''; 
											end if;
									END if;
									
									set  l_purpose_cache = concat(rtrim(l_purpose_cache) , purpose_code_in , ',');          
									
									
									
									set  l_start_datetime = str_to_date( concat(l_transform_date, l_start_time) ,'%Y%m%d%H%i' );
									
									IF l_to_station  <> '%' THEN  
									
									 SELECT ahead_time into l_ahead_time FROM tmp_cancel_limit_define
										WHERE inner_code IN (l_original_bureau_code,l_original_station_telecode)               
										 and (train_code = l_train_code 
												 AND start_station_name = l_start_station_name 
												 AND end_station_name = l_end_station_name 
											 OR train_code = '*' 
											 OR l_train_code LIKE train_code) 
										 AND  station_telecode IN (l_original_station_telecode,'*')
										 AND  train_type IN ('*',l_train_type)                                       
										 AND  purpose_code   IN ('*',purpose_code_in )                            
										 AND start_date <= l_transform_date      
										 AND stop_date >= l_transform_date
										 AND  sale_mode   IN ('*',sale_mode_in )
										 AND running_rule & (power(2,datediff(l_transform_date,start_date) % running_style)) > 0 
										ORDER BY level_flag ,purpose_code desc,train_code desc,station_telecode desc ,train_type desc,sale_mode desc,ahead_time desc limit 1; 
										set l_error =  @@error_count,l_rowcount = row_count();
										IF l_error != 0 THEN ITERATE lab_while_001; end if;
										IF l_rowcount = 0 THEN set  l_ahead_time = 0; end if;
								 
										
										IF timediff( l_start_datetime,now() ) <= l_ahead_time THEN
										 set  l_cancel_purpose = concat(trim(l_cancel_purpose) , purpose_code_in);                  
										 
										END if;
									END if;
									
							 END WHILE lab_while_001;
							 
							 set  purpose_code_in = l_purpose_cache;
							 set  l_cancel_purpose = trim(l_cancel_purpose);
							 
							
							 IF l_auto_share = ':' THEN   
									IF l_show_time = 1 THEN
										 SELECT '########################DBG.045.以远站作为乘车站自动共用的余票################################-';
										 SELECT * FROM tmp_left_base
										 WHERE train_date      = l_transform_date
										 AND train_no       = l_train_no
										 AND assign_station    = l_original_station_telecode
										 AND limit_station   >= l_to_station_no        
										 AND far_from_station_no  = l_from_station_no
										 AND instr( purpose_code_in,purpose_code ) > 0
										 AND coach_no    >= l_tmp_start_coach_no
										 AND coach_no     <= l_tmp_end_coach_no
										 AND coach_no     != l_schedule_coach     
										 AND ((l_fetch_w_seat  = 1 AND seat_type_code LIKE l_seat_type_code AND seat_type_code <> "W") 
											OR (l_fetch_w_seat = 9 AND seat_type_code = "W")
											OR (l_fetch_w_seat = 0 AND (seat_type_code LIKE l_seat_type_code OR seat_type_code = "W")) )
										 AND table_range      >= l_From_Range
										 AND table_range      <= l_To_Range
										 AND (l_tmp_range = '9' OR table_range = CONVERT(l_tmp_range,signed))
										 AND ticket_quantity   >= 1
										 AND (l_to_station = '%' AND limit_station > l_to_station_no OR l_to_station != '%' AND limit_station >= l_to_station_no);
									END if;
									
									INSERT INTO tmp_left_center 
									SELECT * FROM tmp_left_base
									 WHERE train_date      = l_transform_date
									 AND train_no       = l_train_no
									 AND assign_station    = l_original_station_telecode
									 AND limit_station   >= l_to_station_no        
									 AND far_from_station_no  = l_from_station_no
									 AND instr( purpose_code,purpose_code_in ) > 0
									 AND coach_no    >= l_tmp_start_coach_no
									 AND coach_no     <= l_tmp_end_coach_no
									 AND coach_no     != l_schedule_coach     
									 AND ((l_fetch_w_seat  = 1 AND seat_type_code LIKE l_seat_type_code AND seat_type_code <> "W") 
										OR (l_fetch_w_seat = 9 AND seat_type_code = "W")
										OR (l_fetch_w_seat = 0 AND (seat_type_code LIKE l_seat_type_code OR seat_type_code = "W")) )
									 AND table_range      >= l_From_Range
									 AND table_range      <= l_To_Range
									 AND (l_tmp_range = '9' OR table_range = CONVERT(l_tmp_range,signed))
									 AND ticket_quantity   >= 1
									 AND (l_to_station = '%' AND limit_station > l_to_station_no OR l_to_station != '%' AND limit_station >= l_to_station_no);
									
							 ELSE
									 
									
									INSERT INTO tmp_left_center 
									SELECT distinct * FROM tmp_left_base
									 WHERE train_date       = l_transform_date
										AND train_no       = l_train_no
										AND assign_station    = l_original_station_telecode
										AND limit_station   >= l_to_station_no        
										
										AND instr( purpose_code_in,purpose_code ) > 0
										AND (far_from_station_no <= l_to_station_no_limit AND instr( l_cancel_purpose,purpose_code) % 2 = 0   or
												far_from_station_no <= '99' AND instr( l_cancel_purpose,purpose_code) % 2 = 1
											)
										AND coach_no    >= l_tmp_start_coach_no
										AND coach_no     <= l_tmp_end_coach_no
										AND coach_no     != l_schedule_coach     
										AND ((l_fetch_w_seat  = 1 AND seat_type_code LIKE l_seat_type_code AND seat_type_code <> "W") 
										 OR (l_fetch_w_seat = 9 AND seat_type_code = "W")
										 OR (l_fetch_w_seat = 0 AND (seat_type_code LIKE l_seat_type_code OR seat_type_code = "W")) )
										AND table_range      >= l_From_Range
										AND table_range      <= l_To_Range
										AND (l_tmp_range = '9' OR table_range = CONVERT(l_tmp_range,signed))
										AND ticket_quantity   >= 1
										AND (l_to_station = '%' AND limit_station > l_to_station_no OR l_to_station != '%' AND limit_station >= l_to_station_no);
									
									
										  
							 END if;
							 set l_error =  @@error_count,l_rowcount = row_count();
							 IF l_rowcount = 0 OR l_error != 0 THEN 
								set  l_row = l_row + 1;
								ITERATE lab2; 
							end if;
							 set  l_station_list = concat(rtrim(l_station_list) , ',' , l_original_station_telecode); 
							
							IF out_in=9 then
							 select '15===',l_transform_date,l_train_no,l_original_station_telecode;
							
							 select * from tmp_left_center 
								WHERE train_date    = l_transform_date 
								 AND train_no    = l_train_no 
								 AND assign_station = l_original_station_telecode;
							 end if;
							 
							 
							 IF NOT EXISTS(SELECT 1 FROM tmp_left_center 
								WHERE train_date    = l_transform_date 
								 AND train_no    = l_train_no 
								 AND assign_station = l_original_station_telecode) THEN
										
										set  l_row = l_row + 1;
										ITERATE lab2; 
							 end if;
							
							 
					 
							 
							 
							  
							 SELECT reuse_flag into l_share_to_wseat FROM basic.DJ50_reuse_train_define
								WHERE  train_code      = l_train_code
								AND start_station_telecode = l_start_station_telecode
								AND end_station_telecode  = l_end_station_telecode
								AND start_date      <= l_start_train_date
								AND stop_date      >= l_start_train_date
								
								AND seat_type_code     IN ('1','B','*') 
								AND running_rule & (power(2,datediff(l_start_train_date,start_date) % running_style)) > 0 
								ORDER BY seat_type_code desc limit 1;
							 
							 set l_error =  @@error_count,l_rowcount = row_count();
							 IF l_rowcount = 0 AND l_error = 0 THEN
									 
									 
									 SELECT reuse_flag INTO l_share_to_wseat FROM basic.DJ60_reuse_para_define
										WHERE start_date   <= l_start_train_date
										AND stop_date   >= l_start_train_date
										AND start_train_code  IN (l_train_code,'*')
										AND special_flag   = l_train_type_code   
										AND seat_type_code  IN ('1','B','*')
									 ORDER BY seat_type_code desc limit 1;
									 set l_error =  @@error_count,l_rowcount = row_count();
									 IF l_rowcount = 0 AND l_error = 0 THEN set  l_share_to_wseat = '0';  end if; 
							 END if;
							
							 IF l_share_to_wseat = '1' THEN
									 
									 SELECT city_code into l_city_code FROM basic.station_divide_dictionary 
										WHERE station_telecode = l_original_station_telecode 
										AND start_date     <= l_train_date
										AND   stop_date    >= l_train_date;
									 set l_error =  @@error_count,l_rowcount = row_count();
									 IF l_rowcount != 0 AND l_error = 0 THEN
											 SELECT city_code INTO l_city_code FROM basic.station_divide_dictionary 
												WHERE station_telecode = l_from_station    
												AND city_code   = l_city_code
												AND start_date     <= l_train_date
												AND   stop_date    >= l_train_date;
											 set l_error =  @@error_count,l_rowcount = row_count();
											 IF l_rowcount != 0 AND l_error = 0 THEN set  l_share_to_wseat = '0'; end if;
									 END if;
							 END if;
							
						    
								
								UPDATE tmp_left_center 
								 SET train_date  = l_train_date
								 , assign_station = l_from_station								 
								 , inner_code  = concat(trim(inner_code) , station_no , far_from_station_no , limit_station) 
								 , far_from_station_no = 
									( CASE 
										WHEN far_from_station_no < l_from_station_no THEN l_from_station_no
										ELSE far_from_station_no
									 END
									)
								 , seat_type_code = (CASE WHEN l_share_to_wseat = '1' AND seat_type_code IN ('1','B','O') THEN 'W' ELSE seat_type_code END)
								 , station_no  = l_from_station_no
								 WHERE train_date    = l_transform_date 
									AND train_no    = l_train_no 
									AND assign_station = l_original_station_telecode;
							
							
						END if;
					set  l_row = l_row + 1;
				 END WHILE lab2;  
				
				 IF l_show_time = 1 THEN
					SELECT '########################DBG.049.指定车次的乘车余票信息################################-';
					SELECT * FROM tmp_left_base_center;
				 END if;
				  
				  if out_in=9 then 
						
                        
                        select '72===select * from  tmp_left_center';
                         select * from tmp_left_center order by assign_station,train_no,train_date,station_no,far_from_station_no,limit_station,coach_no,seat_type_code,purpose_code,ticket_quantity,up_quantity,mid_quantity,down_quantity,ticket_source,table_range,inner_code,wseat_type_code,seat_feature;
				 end if;
				 
				 INSERT INTO tmp_left_base_center SELECT DISTINCT * FROM tmp_left_center;
				 if out_in=9 then 
					select '73===select * from tmp_left_base_center';
                    select * from tmp_left_base_center order by assign_station,train_no,train_date,station_no,far_from_station_no,limit_station,coach_no,seat_type_code,purpose_code,ticket_quantity,up_quantity,mid_quantity,down_quantity,ticket_source,table_range,inner_code,wseat_type_code,seat_feature;
                      
				 end if;
				
				 set l_error =  @@error_count,l_rowcount = row_count();
				 IF l_rowcount > 0 AND l_error = 0 THEN set  l_share_train_flag = 1 ; end if; 

				 
				 UPDATE tmp_left_base_center SET inner_code = substring(inner_code,1,1)
				 where length(trim(inner_code)) > 1;

				 IF l_show_time = 1 THEN
					SELECT '########################DBG.050.指定车次共用余票信息################################-';
					SELECT * FROM tmp_left_base_center;
				 END if;
			END if;
	END if;
	
	set  l_t6 = l_t6;
	set  l_d6 = now();
	



	 
	 IF EXISTS(SELECT 1 FROM tmp_center_notice WHERE train_no = l_train_no) THEN 
		DELETE a
		 FROM tmp_left_base_center a,tmp_center_notice b
		 WHERE a.train_no    = b.train_no
		 AND a.assign_station  = b.station_telecode
		 AND a.limit_station  = b.station_no
		 AND b.command_code  = 'M'
		 AND a.train_date   >= b.start_date
		 AND a.train_date  <= b.stop_date
		 AND running_rule & (power(2,datediff(a.train_date,b.start_date) % running_style)) > 0 ;
	 END if;
	 
	 
	 delete from tmp_seat_info;
	 INSERT INTO tmp_seat_info 
		SELECT DISTINCT seat_type_code,purpose_code,table_range 
		 FROM tmp_left_base_center
			WHERE train_date   = l_train_date 
				AND train_no   = l_train_no
				AND assign_station = l_from_station;


	 
	 
	 SELECT wseat_type_code into l_w_seat_type
		FROM tmp_left_base_center
		 WHERE train_date   = l_train_date 
			 AND train_no   = l_train_no
			 AND assign_station = l_from_station
			 AND seat_type_code = 'W' LIMIT 1;



	 
	 WHILE EXISTS(SELECT 1 FROM tmp_seat_info) DO
			SELECT seat_type_code,purpose_code,table_range INTO l_seat_type_code,l_tmp_purpose,l_ticket_range FROM tmp_seat_info LIMIT 1;
			DELETE from tmp_seat_info WHERE seat_type_code = l_seat_type_code AND purpose_code = l_tmp_purpose AND table_range = l_ticket_range;

			
			SET l_fetch_w_seat = 0
			 ,  l_delete_flag  = 0;
	 	if out_in=9 then
		   select 'call arith.DS60_Notice_Period',l_train_date
							 , l_train_no
							 , l_train_code
							 , l_from_station
							 , l_seat_type_code
							 , l_fetch_w_seat   
							 , l_tmp_purpose
							 , l_ticket_range
							 , sale_mode_in
							 , l_center_notice   
							 , ''       
							 , l_train_type
							 , l_board_bureau_code 
							 , l_return_code;
		end if;
			CALL arith.DS60_Notice_Period
				(l_train_date
			 , l_train_no
			 , l_train_code
			 , l_from_station
			 , l_seat_type_code
			 , l_fetch_w_seat   
			 , l_tmp_purpose
			 , l_ticket_range
			 , sale_mode_in
			 , l_center_notice   
			 , ''       
			 , l_train_type
			 , l_board_bureau_code 
			 , l_return_code);
			 if out_in=9 then
			select 'end call arith.DS60_Notice_Period',l_train_date
							 , l_train_no
							 , l_train_code
							 , l_from_station
							 , l_seat_type_code
							 , l_fetch_w_seat   
							 , l_tmp_purpose
							 , l_ticket_range
							 , sale_mode_in
							 , l_center_notice   
							 , ''       
							 , l_train_type
							 , l_board_bureau_code 
							 , l_return_code;
			end if;


			set lab_lable_s = 1;
			lab_lable:loop
			if lab_lable_s = 0 THEN
					
						
						
					leave lab_lable;
			end if;

			
			IF l_return_code = 0 THEN
			 SET l_delete_flag = 1;
				 if out_in=9 THEN
							select '104===is here';
						 end if;
			 leave lab_lable;
			
			ELSEIF l_return_code = 1 THEN
			 SET l_delete_flag = 1;
				 if out_in=9 THEN
							select '105===is here';
						 end if;
			 leave lab_lable;
			END if;
			
			
			IF l_fetch_w_seat = 1 AND l_seat_type_code = 'W' THEN
			 SET l_delete_flag = 1;
				 if out_in=9 THEN
							select '107===is here';
						 end if;
			 leave lab_lable;
			
			ELSEIF l_fetch_w_seat = 9 AND l_seat_type_code != 'W' THEN
			 SET l_delete_flag = 1;
				 if out_in=9 THEN
							select '108===is here';
						 end if;
			 leave lab_lable;
			END if;

			
		
		
		
		
		
		
		

			set lab_lable_s = 0;
			end loop lab_lable;

			IF l_delete_flag = 1 THEN
			 
			 DELETE FROM tmp_left_base_center 
				WHERE train_date   = l_train_date 
					AND train_no   = l_train_no 
					AND assign_station = l_from_station
					AND seat_type_code = l_seat_type_code 
					AND purpose_code  = l_tmp_purpose 
					AND table_range    = l_ticket_range;
			END if;
	 END WHILE;
	 
	 
	 SET l_t7 = l_t7 + timediff(now(),l_d6);







End While lab_left;

set lab1_s = 0;
end loop lab1;





IF table_name_in != '' THEN
	SET @l_SQL = concat('INSERT INTO ' , table_name_in , ' SELECT * FROM tmp_left_base_center WHERE limit_station > station_no');
END if;

IF out_in = 2 THEN
	
		SELECT * FROM tmp_left_base_center WHERE limit_station > station_no;
ELSE 
	prepare stmt_1 from @l_SQL;
	EXECUTE stmt_1;
	DROP prepare stmt_1;

	SET l_rowcount = row_count();
END if;





SET l_t0 = timediff( now(),l_d1);
































IF l_show_time = 1 THEN
	SET l_SQL = concat('车次计算时间:' , rtrim(CONVERT(l_t3,CHAR)) , 'ms,下载余票时间:' , rtrim(CONVERT(l_t4,CHAR)) , 'ms,计算共用时间:' , rtrim(CONVERT(l_t6,CHAR))
			 , 'ms,分席别计算预售期和停售时间:' , rtrim(CONVERT(l_t7,CHAR)));
	SET l_SQL = concat(rtrim(l_SQL) , 'Consume Time:' , rtrim(CONVERT(datediff( NOW(), l_d1),CHAR)) , 'mi');
	SELECT l_SQL;
END if;



SET return_out = l_share_train_flag;	


Commit;
leave empty_tmp_table_lab;
end loop empty_tmp_table_lab;

End ;;
DELIMITER ;
