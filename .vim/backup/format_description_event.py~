import sys

sys.path.append("..")
from include.unpack_byte import *


class Format_Description_Event(Start_Event_V3):

    """15
    event_header_len_size_len = 1
    event_type_header_len_size_len = 35
    version > 5.6.1
    """
    CRC32_flag_len = 1
    """329217= (5*256 + 6) * 256 + 1  mysql_version => 5.6.1"""
    checksum_version_product = 329217

    def __init__(self, post_buf):
        Start_Event_V3.__init__(self, post_buf)
        self.common_header_len = self.parse.get_uint8()
        self.start_event_V3_len = self.parse.get_uint8()
        self.query_event_len = self.parse.get_uint8()
        self.stop_event_len = self.parse.get_uint8()
        self.rotate_event_len = self.parse.get_uint8()
        self.intvar_event_len = self.parse.get_uint8()
        self.load_event_len = self.parse.get_uint8()
        self.slave_event_len = self.parse.get_uint8()
        self.create_file_event_len = self.parse.get_uint8()
        self.append_block_event_len = self.parse.get_uint8()
        self.exec_load_event_len = self.parse.get_uint8()
        self.delete_file_event_len = self.parse.get_uint8()
        self.new_load_event_len = self.parse.get_uint8()
        self.rand_event_len = self.parse.get_uint8()
        self.user_var_event_len = self.parse.get_uint8()
        self.format_description_event_len = self.parse.get_uint8()
        self.xid_event_len = self.parse.get_uint8()
        self.begin_load_query_event_len = self.parse.get_uint8()
        self.execute_load_query_event_len = self.parse.get_uint8()
        self.table_map_event_len = self.parse.get_uint8()
        self.delete_rows_eventv0_len = self.parse.get_uint8()
        self.update_rows_eventv0_len = self.parse.get_uint8()
        self.write_rows_eventv0_len = self.parse.get_uint8()
        self.delete_rows_eventv1_len = self.parse.get_uint8()
        self.update_rows_eventv1_len = self.parse.get_uint8()
        self.write_rows_eventv1_len = self.parse.get_uint8()
        self.incident_event_len = self.parse.get_uint8()
        self.heartbeat_event_len = self.parse.get_uint8()
        self.ignorable_log_event_len = self.parse.get_uint8()
        self.rows_query_log_event_len = self.parse.get_uint8()
        self.delete_rows_eventv2_len = self.parse.get_uint8()
        self.update_rows_eventv2_len = self.parse.get_uint8()
        self.write_rows_eventv2_len = self.parse.get_uint8()
        self.gtid_log_event_len = self.parse.get_uint8()
        self.anonymous_gtid_log_event_len = self.parse.get_uint8()
        self.previous_gtids_log_event_len = self.parse.get_uint8()
        ver_list = self.server_ver.split('-')[0].split('.')
        checksum_version = (ver_list[0] * 256 +
                            ver_list[1]) * 256 + ver_list[2]
        if checksum_version <\
           Format_Description_Event.checksum_version_product:
            self.binlog_checksum = "BINLOG_CHECKSUM_ALG_UNDEF"
            self.CRC32_flag = 0
        elif self.parse.get_uint8():
            self.binlog_checksum = "BINLOG_CHECKSUM_ALG_CRC32"
            self.CRC32_flag = 1
            self.CRC32 = self.parse.get_uint32()
        else:
            self.binlog_checksum = "BINLOG_CHECKSUM_ALG_OFF"
            self.CRC32_flag = 0
