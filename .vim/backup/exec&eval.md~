# python exec & eval &scope
exec("print(\"hello, world\")")
hello, world
## exec
通过exec可以执行动态Python代码

```python
exec("print(\"hello, world\")")
```
输出
```
hello, world
```

```python
exec("a = 2")
print a
```
输出

```
2
```

## eval
eval函数可以计算Python表达式，并返回结果。  
其他用法，可以把list,tuple,dict和string相互转化。见下例子：
``python`
>>> a = "[[1,2], [3,4], [5,6], [7,8], [9,0]]"
>>> b = eval(a)
>>> b
    [[1, 2], [3, 4], [5, 6], [7, 8], [9, 0]]
>>> type(b)
    list
```

## scope
这里有个scope(命名空间，作用域)的概念，为了不破坏现在的scope，可以新建一个scope(一个字典)执行exec(Javascript没有此功能)

```python
>>> a=2
>>> scope = {}
>>> exec("a = 4", scope)
>>> a
2
>>> scope['a']
4
>>> scope.keys()
dict_keys(['a', '__builtins__'])
```
