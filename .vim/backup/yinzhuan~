create table NativeSecurityType( NativeSecurityType smallint(6) not null, Currency char(4) default null, PricePrecision decimal(13,4) default null, QtyUnit decimal(15,2) default null, ParValue decimal(13,4) default null, Exchange char(4) default null, Description varchar(50) default null, primary key(NativeSecurityType), key FK_Reference57 (Currency), key FK_Reference77 (Exchange));

create table ListSecurity ( SecurityID char(8) not null, Symbol char(40) default null, EnglishName char(40) default null, ISIN char(12) default null, UnderlyingSecurityID char(8) default null, ListDate int(11) default null, NativeSecurityType smallint(6) not null, ParValue decimal(13,4) default null, OutStandingShare decimal(18,2) default null, PublicFloatShareQuantity decimal(18,2) default null, DayTrading smallint(6) default null, PrevClosePx decimal(13,4) default null, OnList smallint(6) default null, QualificationFlag smallint(6) default null, primary key (SecurityID), key FK_Reference_3 (NativeSecurityType), constraint fk_reference_3 foreign key (NativeSecurityType) references NativeSecurityType (NativeSecurityType));

create table Gage ( SecurityID char(8) not null, Ratio decimal(5,2) default NULL, primary key (SecurityID), constraint fk_reference_70 foreign key(SecurityID) references ListSecurity (SecurityID));

create table CreditSecurity( SecurityID char(8) not null, Side char(1) not null,PriceCheckMode tinyint(4) default null, MarketOrderPermit smallint(6) default null, primary key(SecurityID,Side), constraint fk_reference_72 foreign key(SecurityID) references ListSecurity (SecurityID));

create table PledgeRule( SecurityID char(8) not null, ContractMultiplier decimal(5,4) default null, RegularShare char(22) default null, PledgeShareRcRuleTemplate char(32) default null, SolutionShareRcRuleTemplate char(32) default null, primary key(SecurityID), key FK_Reference315 (SolutionShareRcRuleTemplate), key FK_Reference316 (PledgeShareRcRuleTemplate), constraint fk_reference_109 foreign key(SecurityID) references ListSecurity (SecurityID));

select SecurityID,'102' as SecurityIDSource, Symbol as Symbol,t.EnglishName,ISIN, UnderlyingSecurityID,'102' as UnderlyingSecurityIDSource,ListDate,t.NativeSecurityType as SecurityType,n.Currency, '1.00' as QtyUnit, (case t.DayTrading when 0 then 'N' else 'Y' end) as DayTrading, PrevClosePx, 'SecurityStatus' as SecurityStatus,OutstandingShare,PublicFloatShareQuantity, t.ParValue, (case (select count(0) from Gage g where g.SecurityID = t.SecurityID) when 0 then 'N' else 'Y' end) as GageFlag,( select g.Ratio from Gage g where g.SecurityID = t.SecurityID = t.SecurityID) as GageRatio, (case(select c.Side from CreditSecurity c where c.SecurityID = t.SecurityID and c.Side = '1') when '1' then 'Y'Ctrl-C -- exit!as CrdSellUnderlying, (case(select c.Side from CreditSeAbortedc where c.SecurityID = t.SecurityID and c.Side = '2') when '2' then 'Y' else 'N' end) as CrdSellUnderlying, (select c.PriceCheckMode From CreditSecurity c where c.SecurityID = t.SecurityID and c.Sidhu@hu:/opt/mysql-5.5.49-linux2.6-x86_64$ ount(0) from PledgeRule p where p.SecurityID=t.SecurityID) when 0 then 'N' else 'Y' end) as PledgeFlag, (select p.ContractMultiplier from PledgeRule p where p.SecurityID = t.SecurityID) as ContractMultiplier, (select p.RegularShare from PledgeRule p where p.SecurityID = t.SecurityID) as RegularShare, (case t.QualificationFlag when 1 then 'Y' else 'N' end) as QualificationFlag from ListSecurity t, NativeSecurityType n where t.Onlist = 1 and t.NativeSecurityType = n.NativeSecurityType and t.NativeSecurityType not in(1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,23,24,25,26,28,29,30,33,34) order by t.SecurityID;

select SecurityID,'102' as SecurityIDSource, Symbol as Symbol,t.EnglishName,ISIN, UnderlyingSecurityID,'102' as UnderlyingSecurityIDSource,ListDate,t.NativeSecurityType as SecurityType,n.Currency,
    -> '1.00' as QtyUnit,
    -> (case t.DayTrading
    -> when 0 then 'N'
    -> else 'Y'
    -> end) as DayTrading,
    -> PreClosePx,
    -> 'SecurityStatus' as SecurityStatus,OutstandingShare,PublicFloatShareQuantity, t.ParValue,
    -> (case (select count(0) from Gage g where g.SecurityID = t.SecurityID)
    -> when 0 then 'N' 
    -> else
    -> 'Y'
    -> end) as GageFlag,(
    -> select g.Ratio from Gage g where g.SecurityID = t.SecurityID = t.SecurityID) as GageRatio,
    -> (case(select c.Side from CreditSecurity c where c.SecurityID = t.SecurityID and c.Side = '1')
    -> when '1' then
    -> 'Y'
    -> else 'N'
    -> end) as CrdSellUnderlying,
    -> (case(select c.Side from CreditSecurity c where c.SecurityID = t.SecurityID and c.Side = '2')
    -> when '2' then
    -> 'Y'
    -> else 'N'
    -> end) as CrdSellUnderlying,
    -> (select c.PriceCheckMode From CreditSecurity c where c.SecurityID = t.SecurityID and c.Side = 2) as PriceCheckMode,
    -> (case (select count(0) from PledgeRule p where p.SecurityID=t.SecurityID)
    -> when 0 then 'N'
    -> else 'Y'
    -> end) as PledgeFlag,
    -> (select p.ContractMultiplier from PledgeRule p where p.SecurityID = t.SecurityID) as ContractMultiplier,
    -> (select p.RegularShare from PledgeRule p where p.SecurityID = t.SecurityID) as RegularShare,
    -> (case t.QualificationFlag
    -> when 1 then 'Y'
    -> else 'N' end) as QualificationFlag from ListSecurity t, NativeSecurityType n where t.Onlist = 1 and t.NativeSecurityType = n.NativeSecurityType and t.NativeSecurityType not in(1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,23,24,25,26,28,29,30,33,34)
    -> order by t.SecurityID;

