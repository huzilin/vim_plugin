#!/usr/bin/env python
# -*- coding:utf-8 -*-
import time
import os
from subprocess import Popen, PIPE

PG_DUMP = '/usr/local/pgsql/bin/pg_dump'
BACKUP_DIR = '/data/pgsql/pg_backup'
DUMP_NAME = time.strftime('%Y%m%d',time.localtime(time.time()))
HOST = '192.168.32.229'
PORT = 5432
USERNAME = 'postgres'
PASSWORD = 'j4ixhGmCEP7wEQgYaX'

class PgDumpCli:

    pg_dump = PG_DUMP
    username = USERNAME
    password = PASSWORD
    host = HOST
    port = PORT
    backup_file = BACKUP_DIR + '/' + DUMP_NAME


    @property
    def env(self):
        env = os.environ.copy()
        env["PGPASSWORD"] = PGPASSWORD
        return env

    def __call__(self):
        print os.path.join(self.pg_dump,
            '-h',
            self.host,
            '-p',
            str(self.port),
            '-U',
            self.username,
            '-f',
            self.backup_file)

        return (
            os.path.join(self.pg_dump,
            '-h',
            self.host,
            '-p',
            str(self.port),
            '-U',
            self.username,
            '-f',
            self.backup_file))

#def main():
#    pg_dump = PgDumpCli()
#    try:
#        p = Popen(pg_dump(), stderr=PIPE, stdout=PIPE, env=pg_dump.env)
#        out, err = p.communicate()
#        if p.returncode:
#            # error code returned
#            print "error happend"
#        else:
#            # successfull completion
#            print "success finished"
#    except OSError:
#        print "os error"

if __name__ == "__main__":
    #main()
    pg_dump = PgDumpCli()
    print pg_dump()
