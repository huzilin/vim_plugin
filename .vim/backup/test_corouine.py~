import tornado.ioloop
import tornado.web
import time

from tornado.web import asynchronous
from tornado.gen import coroutine
from concurrent.futures import ThreadPoolExecutor
from tornado.concurrent import run_on_executor

class Test1(tornado.web.RequestHandler):
    
    executor = ThreadPoolExecutor(3)
    
    @coroutine
    def get(self):
        print 'enter test1'
        ret = yield self.sleep()
        self.finish({'message':ret})

    @run_on_executor
    def sleep(self):
        time.sleep(10)
        return 10

class ShowDisk(tornado.web.RequestHandler):
    
    def get(self):
        content = commands.getoutput('df -h')
        html_content = "<html><body><pre> %s </pre></body></html>" % content
        self.write(html_content)

application = tornado.web.Application([
    (r"/test1", Test1),
    (r"/disk", ShowDisk)
])

if __name__ == "__main__":
    application.listen(6888)
    tornado.ioloop.IOLoop.instance().start()
