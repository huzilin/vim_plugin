#!/bin/bash

TEMP=`getopt -o r: --long basedir:,packet_name:,remote_tmp_dir:,datadir:,socket:,innodb_log_group_home_dir:,innodb_undo_directory:,log_error:,tmpdir:,pid:,packet_name:,log_bin:,user:,my_cnf_name:,cnf_remote_path:,db_user_and_host:,db_password:,server_id:,ip:,port: -n 'example.bash' -- "$@"`

if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

eval set -- "$TEMP"

while true ; do
	case "$1" in
		--basedir) basedir=$2 ; shift 2 ;;
		--datadir) datadir=$2 ; shift 2 ;;
		--socket) socket=$2 ; shift 2 ;;
		--innodb_log_group_home_dir) innodb_log_group_home_dir=$2 ; shift 2 ;;
		--innodb_undo_directory) innodb_undo_directory=$2 ; shift 2 ;;
		--log_error) log_error=$2 ; shift 2 ;;
		--tmpdir) tmpdir=$2 ; shift 2 ;;
		--pid) pid=$2 ; shift 2 ;;
		--packet_name) packet_name=$2 ; shift 2 ;;
		--log_bin) log_bin=$2 ; shift 2 ;;
		--user) user=$2 ; shift 2 ;;
		-r|--remote_tmp_dir) remote_tmp_dir=$2 ; shift 2;;
		--my_cnf_name) my_cnf_name=$2 ; shift 2;;
		--cnf_remote_path) cnf_remote_path=$2 ; shift 2;;
		--db_user_and_host) db_user_and_host=$2 ; shift 2;;
		--db_password) db_password=$2 ; shift 2 ;;
		--server_id) server_id=$2 ; shift 2 ;;
		--ip) ip=$2 ; shift 2 ;;
		--port) port=$2 ; shift 2 ;;
		--) shift ; break ;;
		*) echo "Internal error!" ; exit 1 ;;
	esac
done
basedir_dirname=`dirname $basedir`
packet__after_tar_name=`echo $packet_name | awk -F '.tar' '{print $1}'`
remote_package_path="$remote_tmp_dir/$packet_name"
db_user=`echo $db_user_and_host | awk -F '@' '{print $1}'`
db_password_create=${db_password//\\/\\\\}
db_password_create=${db_password_create//\"/\\\"}

if [ -Z $user ];then
	user=mysql
fi

if [[ "$datadir" =~ ^/ ]];then
	mkdir -p "$datadir"
	if [ $? -ne 0 ];then
		exit 201
	fi
	chown -R "$user"."$user" "$datadir"
	if [ $? -ne 0 ];then
		exit 202
	fi
fi


if [[ "$socket" =~ ^/ ]];then
	mkdir -p "`dirname $socket`"
	if [ $? -ne 0 ];then
		exit 203
	fi
	chown -R "$user"."$user" "`dirname $socket`"
	if [ $? -ne 0 ];then
		exit 204
	fi
elif [[ `$socket` =~ / ]];then
	mkdir -p "$datadir/`dirname $socket`"
	if [ $? -ne 0 ];then
	exit 203
	fi
	chown -R "$user"."$user" "$datadir/`dirname $socket`"
	if [ $? -ne 0 ];then
		exit 204
	fi
fi

if [[ "$innodb_log_group_home_dir" =~ ^/ ]];then
	mkdir -p "$innodb_log_group_home_dir"
	if [ $? -ne 0 ];then
		exit 205
	fi
	chown -R "$user"."$user" "$innodb_log_group_home_dir"
	if [ $? -ne 0 ];then
		exit 206
	fi
elif [[ "$innodb_log_group_home_dir" =~ / ]];then
	mkdir -p "$datadir/$innodb_log_group_home_dir"
	if [ $? -ne 0 ];then
		exit 205
	fi
	chown -R "$user"."$user" "$datadir/$innodb_log_group_home_dir"
	if [ $? -ne 0 ];then
		exit 206
	fi
fi

if [[ "$innodb_undo_directory" =~ ^/ ]];then
	mkdir -p "$innodb_undo_directory"
	if [ $? -ne 0 ];then
		exit 207
	fi
	chown -R "$user"."$user" "$innodb_undo_directory"
	if [ $? -ne 0 ];then
		exit 208
	fi
elif [[ "$innodb_undo_directory" =~ / ]];then
	mkdir -p "$datadir/$innodb_undo_directory"
	if [ $? -ne 0 ];then
		exit 207
	fi
	chown -R "$user"."$user" "$datadir/$innodb_undo_directory"
	if [ $? -ne 0 ];then
		exit 208
	fi
fi

if [[ "$log_error" =~ ^/ ]];then
	mkdir -p "`dirname $log_error`"
	if [ $? -ne 0 ];then
		exit 209
	fi
	chown -R "$user"."$user" "`dirname $log_error`"
	if [ $? -ne 0 ];then
		exit 210
	fi
elif [[ "$log_error" =~ / ]];then
	mkdir -p "$datadir/`dirname $log_error`"
	if [ $? -ne 0 ];then
		exit 209
	fi
	chown -R "$user"."$user" "$datadir/`dirname $log_error`"
	if [ $? -ne 0 ];then
		exit 210
	fi
fi

if [[ "$pid" =~ ^/ ]];then
	mkdir -p "`dirname $pid`"
	if [ $? -ne 0 ];then
		exit 211
	fi
	chown -R "$user"."$user" "`dirname $pid`"
	if [ $? -ne 0 ];then
		exit 212
	fi
elif [[ "$pid" =~ / ]];then
	mkdir -p "$datadir/`dirname $pid`"
	if [ $? -ne 0 ];then
		exit 211
	fi
	chown -R "$user"."$user" "$datadir/`dirname $pid`"
	if [ $? -ne 0 ];then
		exit 212
	fi
fi

if [[ "$tmpdir" =~ ^/ ]];then
	mkdir -p "$tmpdir"
	if [ $? -ne 0 ];then
		exit 213
	fi
	chown -R "$user"."$user" "`dirname $tmpdir`"
	if [ $? -ne 0 ];then
		exit 214
	fi
elif [[ "$tmpdir" =~ / ]];then
	mkdir -p "$datadir/$tmpdir"
	if [ $? -ne 0 ];then
		exit 213
	fi
	chown -R "$user"."$user" "$datadir/`dirname $tmp`"
	if [ $? -ne 0 ];then
		exit 214
	fi
fi

if [[ "$log_bin" =~ ^/ ]];then
	mkdir -p "`dirname $log_bin`"
	if [ $? -ne 0 ];then
		exit 215
	fi
	chown -R "$user"."$user" "`dirname $log_bin`"
	if [ $? -ne 0 ];then
		exit 216
	fi
elif [[ "$log_bin" =~ / ]];then
	mkdir -p "$datadir/`dirname $log_bin`"
	if [ $? -ne 0 ];then
		exit 215
	fi
	chown -R "$user"."$user" "$datadir/`dirname $log_bin`"
	if [ $? -ne 0 ];then
		exit 216
	fi
fi

cd $basedir;./scripts/mysql_install_db --defaults-file=$remote_tmp_dir/$my_cnf_name --user=$user --basedir=$basedir --datadir=$datadir > /dev/null

if [ $? -ne 0 ];then
	exit 217
fi

if [ `whoami` == 'root' ];then
cat << EOF >> /home/$user/.bashrc
PATH=\$PATH:\$HOME/bin:$basedir/bin
export PATH
EOF
fi

cat << EOF >> ~/.bashrc
PATH=\$PATH:\$HOME/bin:$basedir/bin
export PATH
EOF
   
source ~/.bashrc

cp $remote_tmp_dir/$my_cnf_name $cnf_remote_path

if [ $? -ne 0 ];then
	exit 218
fi

chown "$user"."$user" $cnf_remote_path

if [ $? -ne 0 ];then
	exit 219
fi

sed -i "s/^server[-_]id.*/server_id = $server_id/g" $cnf_remote_path

if [ $? -ne 0 ];then
	exit 220
fi

$basedir/bin/mysqld_safe --defaults-file=$cnf_remote_path &

i=0
while [ $i -lt 200 ]
do
	if [ "`$basedir/bin/mysqladmin -uroot -S $socket ping | head -n1 | awk '{print $3}'`" == 'alive' ];then
		break
	fi
	let i++
	sleep 1
done

if [ $? -eq 200 ];then
	exit 222
fi

sleep 5
$basedir/bin/mysql -uroot -S $socket -BNe "grant all on *.* to $db_user_and_host identified by \"$db_password_create\" with grant option"

if [ "`$basedir/bin/mysqladmin -u$db_user -p\"$db_password\" -h$ip -P$port ping | head -n1 | awk '{print $3}'`" != 'alive' ];then
	exit 222
fi

$basedir/bin/mysql -uroot -S $socket -BNe "reset master" > /dev/null

if [ $? -ne 0 ];then
	exit 223
fi
