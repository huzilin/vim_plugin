import sys

sys.path.append("..")
from include import unpack_byte


class Gtid_Log_Event:
    """
    33
    encode_fla_len = 1
    encode_sid_len = 16
    encode_gno_len = 8
    """
    def __init__(self, post_buf):
        self.parse = unpack_byte.Parse_Byte_Stream(post_buf)
        self.encode_flag = self.parse.get_uint8()
        self.sid = "%s-%s-%s-%s-%s" %\
            (binascii.b2a_hex(post_buf[self.parse.pos: self.parse.pos + 4]),
             binascii.b2a_hex(post_buf[self.parse.pos + 4:
                                       self.parse.pos + 4 + 2]),
             binascii.b2a_hex(post_buf[self.parse.pos + 4 + 2:
                                       self.parse.pos + 4 + 2 + 2]),
             binascii.b2a_hex(post_buf[self.parse.pos + 4 + 2 + 2:
                                       self.parse.pos + 4 + 2 + 2 + 2]),
             binascii.b2a_hex(post_buf[self.parse.pos + 4 + 2 + 2 + 2:
                                       self.parse.pos + 4 + 2 + 2 + 2 + 6]))
        self.parse.pos += 16
        self.gno = self.parse.get_uint64()

    def event_output(self):
        print "encode_flag: %d" % self.encode_flag
        print "SET @@SESSION.GTID_NEXT= '%s:%d';" % (self.sid, self.gno)
